<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.21.0110.1657                               -->
<workbook original-version='18.1' source-build='2020.3.5 (20203.21.0110.1657)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='owid-covid-data(1)+' inline='true' name='federated.0dm92np03a2w0g19wt8jx1tgbpns' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data(1)' name='textscan.0nf5dc209v9vdk17lja511qx8byf'>
            <connection class='textscan' directory='C:/Users/SHAFI/Downloads' filename='owid-covid-data(1).csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='right' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[owid-covid-data(1).csv].[location]' />
              <expression op='[countries.csv].[name]' />
            </expression>
          </clause>
          <relation connection='textscan.0nf5dc209v9vdk17lja511qx8byf' name='owid-covid-data(1).csv' table='[owid-covid-data(1)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='iso_code' ordinal='0' />
              <column datatype='string' name='continent' ordinal='1' />
              <column datatype='string' name='location' ordinal='2' />
              <column datatype='date' name='date' ordinal='3' />
              <column datatype='real' name='total_cases' ordinal='4' />
              <column datatype='real' name='new_cases' ordinal='5' />
              <column datatype='real' name='new_cases_smoothed' ordinal='6' />
              <column datatype='real' name='total_deaths' ordinal='7' />
              <column datatype='real' name='new_deaths' ordinal='8' />
              <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
              <column datatype='real' name='total_cases_per_million' ordinal='10' />
              <column datatype='real' name='new_cases_per_million' ordinal='11' />
              <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
              <column datatype='real' name='total_deaths_per_million' ordinal='13' />
              <column datatype='real' name='new_deaths_per_million' ordinal='14' />
              <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
              <column datatype='real' name='reproduction_rate' ordinal='16' />
              <column datatype='string' name='icu_patients' ordinal='17' />
              <column datatype='string' name='icu_patients_per_million' ordinal='18' />
              <column datatype='string' name='hosp_patients' ordinal='19' />
              <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
              <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
              <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
              <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
              <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
              <column datatype='real' name='new_tests' ordinal='25' />
              <column datatype='real' name='total_tests' ordinal='26' />
              <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
              <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
              <column datatype='real' name='new_tests_smoothed' ordinal='29' />
              <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
              <column datatype='real' name='positive_rate' ordinal='31' />
              <column datatype='real' name='tests_per_case' ordinal='32' />
              <column datatype='string' name='tests_units' ordinal='33' />
              <column datatype='real' name='total_vaccinations' ordinal='34' />
              <column datatype='real' name='people_vaccinated' ordinal='35' />
              <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
              <column datatype='real' name='new_vaccinations' ordinal='37' />
              <column datatype='real' name='new_vaccinations_smoothed' ordinal='38' />
              <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
              <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
              <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
              <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='42' />
              <column datatype='real' name='stringency_index' ordinal='43' />
              <column datatype='real' name='population' ordinal='44' />
              <column datatype='real' name='population_density' ordinal='45' />
              <column datatype='real' name='median_age' ordinal='46' />
              <column datatype='real' name='aged_65_older' ordinal='47' />
              <column datatype='real' name='aged_70_older' ordinal='48' />
              <column datatype='real' name='gdp_per_capita' ordinal='49' />
              <column datatype='real' name='extreme_poverty' ordinal='50' />
              <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
              <column datatype='real' name='diabetes_prevalence' ordinal='52' />
              <column datatype='real' name='female_smokers' ordinal='53' />
              <column datatype='real' name='male_smokers' ordinal='54' />
              <column datatype='real' name='handwashing_facilities' ordinal='55' />
              <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
              <column datatype='real' name='life_expectancy' ordinal='57' />
              <column datatype='real' name='human_development_index' ordinal='58' />
            </columns>
          </relation>
          <relation connection='textscan.0nf5dc209v9vdk17lja511qx8byf' name='countries.csv' table='[countries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='country' ordinal='0' />
              <column datatype='real' name='latitude' ordinal='1' />
              <column datatype='real' name='longitude' ordinal='2' />
              <column datatype='string' name='name' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='right' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[owid-covid-data(1).csv].[location]' />
              <expression op='[countries.csv].[name]' />
            </expression>
          </clause>
          <relation connection='textscan.0nf5dc209v9vdk17lja511qx8byf' name='owid-covid-data(1).csv' table='[owid-covid-data(1)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='iso_code' ordinal='0' />
              <column datatype='string' name='continent' ordinal='1' />
              <column datatype='string' name='location' ordinal='2' />
              <column datatype='date' name='date' ordinal='3' />
              <column datatype='real' name='total_cases' ordinal='4' />
              <column datatype='real' name='new_cases' ordinal='5' />
              <column datatype='real' name='new_cases_smoothed' ordinal='6' />
              <column datatype='real' name='total_deaths' ordinal='7' />
              <column datatype='real' name='new_deaths' ordinal='8' />
              <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
              <column datatype='real' name='total_cases_per_million' ordinal='10' />
              <column datatype='real' name='new_cases_per_million' ordinal='11' />
              <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
              <column datatype='real' name='total_deaths_per_million' ordinal='13' />
              <column datatype='real' name='new_deaths_per_million' ordinal='14' />
              <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
              <column datatype='real' name='reproduction_rate' ordinal='16' />
              <column datatype='string' name='icu_patients' ordinal='17' />
              <column datatype='string' name='icu_patients_per_million' ordinal='18' />
              <column datatype='string' name='hosp_patients' ordinal='19' />
              <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
              <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
              <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
              <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
              <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
              <column datatype='real' name='new_tests' ordinal='25' />
              <column datatype='real' name='total_tests' ordinal='26' />
              <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
              <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
              <column datatype='real' name='new_tests_smoothed' ordinal='29' />
              <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
              <column datatype='real' name='positive_rate' ordinal='31' />
              <column datatype='real' name='tests_per_case' ordinal='32' />
              <column datatype='string' name='tests_units' ordinal='33' />
              <column datatype='real' name='total_vaccinations' ordinal='34' />
              <column datatype='real' name='people_vaccinated' ordinal='35' />
              <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
              <column datatype='real' name='new_vaccinations' ordinal='37' />
              <column datatype='real' name='new_vaccinations_smoothed' ordinal='38' />
              <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
              <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
              <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
              <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='42' />
              <column datatype='real' name='stringency_index' ordinal='43' />
              <column datatype='real' name='population' ordinal='44' />
              <column datatype='real' name='population_density' ordinal='45' />
              <column datatype='real' name='median_age' ordinal='46' />
              <column datatype='real' name='aged_65_older' ordinal='47' />
              <column datatype='real' name='aged_70_older' ordinal='48' />
              <column datatype='real' name='gdp_per_capita' ordinal='49' />
              <column datatype='real' name='extreme_poverty' ordinal='50' />
              <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
              <column datatype='real' name='diabetes_prevalence' ordinal='52' />
              <column datatype='real' name='female_smokers' ordinal='53' />
              <column datatype='real' name='male_smokers' ordinal='54' />
              <column datatype='real' name='handwashing_facilities' ordinal='55' />
              <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
              <column datatype='real' name='life_expectancy' ordinal='57' />
              <column datatype='real' name='human_development_index' ordinal='58' />
            </columns>
          </relation>
          <relation connection='textscan.0nf5dc209v9vdk17lja511qx8byf' name='countries.csv' table='[countries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='country' ordinal='0' />
              <column datatype='real' name='latitude' ordinal='1' />
              <column datatype='real' name='longitude' ordinal='2' />
              <column datatype='string' name='name' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[countries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[owid-covid-data(1).csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[countries.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[countries.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[countries.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[countries.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='owid-covid-data(1).csv' datatype='table' name='[__tableau_internal_object_id__].[owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='string' name='[hosp_patients]' role='dimension' type='nominal' />
      <column caption='Hosp Patients Per Million' datatype='string' name='[hosp_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='string' name='[icu_patients]' role='dimension' type='nominal' />
      <column caption='Icu Patients Per Million' datatype='string' name='[icu_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='real' name='[new_tests]' role='measure' type='quantitative' />
      <column caption='New Tests Per Thousand' datatype='real' name='[new_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='real' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations' datatype='real' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='real' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='real' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='real' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='string' name='[weekly_hosp_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='string' name='[weekly_hosp_admissions_per_million]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions' datatype='string' name='[weekly_icu_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='string' name='[weekly_icu_admissions_per_million]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[people_fully_vaccinated]' derivation='Sum' name='[sum:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_vaccinated]' derivation='Sum' name='[sum:people_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='tableau-20' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dm92np03a2w0g19wt8jx1tgbpns].[sum:people_fully_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dm92np03a2w0g19wt8jx1tgbpns].[sum:total_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dm92np03a2w0g19wt8jx1tgbpns].[sum:people_vaccinated:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Jordan&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='owid-covid-data(1).csv' id='owid-covid-data(1).csv_C2D598101A9345FDBB5204E6D8734627'>
            <properties context=''>
              <relation join='right' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[owid-covid-data(1).csv].[location]' />
                    <expression op='[countries.csv].[name]' />
                  </expression>
                </clause>
                <relation connection='textscan.0nf5dc209v9vdk17lja511qx8byf' name='owid-covid-data(1).csv' table='[owid-covid-data(1)#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='iso_code' ordinal='0' />
                    <column datatype='string' name='continent' ordinal='1' />
                    <column datatype='string' name='location' ordinal='2' />
                    <column datatype='date' name='date' ordinal='3' />
                    <column datatype='real' name='total_cases' ordinal='4' />
                    <column datatype='real' name='new_cases' ordinal='5' />
                    <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                    <column datatype='real' name='total_deaths' ordinal='7' />
                    <column datatype='real' name='new_deaths' ordinal='8' />
                    <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                    <column datatype='real' name='total_cases_per_million' ordinal='10' />
                    <column datatype='real' name='new_cases_per_million' ordinal='11' />
                    <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                    <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                    <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                    <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                    <column datatype='real' name='reproduction_rate' ordinal='16' />
                    <column datatype='string' name='icu_patients' ordinal='17' />
                    <column datatype='string' name='icu_patients_per_million' ordinal='18' />
                    <column datatype='string' name='hosp_patients' ordinal='19' />
                    <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
                    <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
                    <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
                    <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
                    <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
                    <column datatype='real' name='new_tests' ordinal='25' />
                    <column datatype='real' name='total_tests' ordinal='26' />
                    <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
                    <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
                    <column datatype='real' name='new_tests_smoothed' ordinal='29' />
                    <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
                    <column datatype='real' name='positive_rate' ordinal='31' />
                    <column datatype='real' name='tests_per_case' ordinal='32' />
                    <column datatype='string' name='tests_units' ordinal='33' />
                    <column datatype='real' name='total_vaccinations' ordinal='34' />
                    <column datatype='real' name='people_vaccinated' ordinal='35' />
                    <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
                    <column datatype='real' name='new_vaccinations' ordinal='37' />
                    <column datatype='real' name='new_vaccinations_smoothed' ordinal='38' />
                    <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
                    <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
                    <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
                    <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='42' />
                    <column datatype='real' name='stringency_index' ordinal='43' />
                    <column datatype='real' name='population' ordinal='44' />
                    <column datatype='real' name='population_density' ordinal='45' />
                    <column datatype='real' name='median_age' ordinal='46' />
                    <column datatype='real' name='aged_65_older' ordinal='47' />
                    <column datatype='real' name='aged_70_older' ordinal='48' />
                    <column datatype='real' name='gdp_per_capita' ordinal='49' />
                    <column datatype='real' name='extreme_poverty' ordinal='50' />
                    <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
                    <column datatype='real' name='diabetes_prevalence' ordinal='52' />
                    <column datatype='real' name='female_smokers' ordinal='53' />
                    <column datatype='real' name='male_smokers' ordinal='54' />
                    <column datatype='real' name='handwashing_facilities' ordinal='55' />
                    <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
                    <column datatype='real' name='life_expectancy' ordinal='57' />
                    <column datatype='real' name='human_development_index' ordinal='58' />
                  </columns>
                </relation>
                <relation connection='textscan.0nf5dc209v9vdk17lja511qx8byf' name='countries.csv' table='[countries#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='country' ordinal='0' />
                    <column datatype='real' name='latitude' ordinal='1' />
                    <column datatype='real' name='longitude' ordinal='2' />
                    <column datatype='string' name='name' ordinal='3' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='predicted_tweets_AraBert2(3)' inline='true' name='federated.0cl3ccx02rtimk1dmwenu19pwqgg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='predicted_tweets_AraBert2(3)' name='textscan.093f9ym0pvaxn716xyl7n0ots7jy'>
            <connection class='textscan' directory='C:/Users/SHAFI/Downloads' filename='predicted_tweets_AraBert2(3).csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.093f9ym0pvaxn716xyl7n0ots7jy' name='predicted_tweets_AraBert2(3).csv' table='[predicted_tweets_AraBert2(3)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='real' name='neg_proba' ordinal='0' />
            <column datatype='real' name='pos_proba' ordinal='1' />
            <column datatype='string' name='Tweet' ordinal='2' />
            <column datatype='string' name='sentiment' ordinal='3' />
            <column datatype='datetime' name='created_at' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.093f9ym0pvaxn716xyl7n0ots7jy' name='predicted_tweets_AraBert2(3).csv' table='[predicted_tweets_AraBert2(3)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='real' name='neg_proba' ordinal='0' />
            <column datatype='real' name='pos_proba' ordinal='1' />
            <column datatype='string' name='Tweet' ordinal='2' />
            <column datatype='string' name='sentiment' ordinal='3' />
            <column datatype='datetime' name='created_at' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[predicted_tweets_AraBert2(3).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neg_proba</remote-name>
            <remote-type>5</remote-type>
            <local-name>[neg_proba]</local-name>
            <parent-name>[predicted_tweets_AraBert2(3).csv]</parent-name>
            <remote-alias>neg_proba</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[predicted_tweets_AraBert2(3).csv_B0761DF2E2634ED2BF7439A87152174F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pos_proba</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pos_proba]</local-name>
            <parent-name>[predicted_tweets_AraBert2(3).csv]</parent-name>
            <remote-alias>pos_proba</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[predicted_tweets_AraBert2(3).csv_B0761DF2E2634ED2BF7439A87152174F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tweet</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Tweet]</local-name>
            <parent-name>[predicted_tweets_AraBert2(3).csv]</parent-name>
            <remote-alias>Tweet</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[predicted_tweets_AraBert2(3).csv_B0761DF2E2634ED2BF7439A87152174F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sentiment]</local-name>
            <parent-name>[predicted_tweets_AraBert2(3).csv]</parent-name>
            <remote-alias>sentiment</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[predicted_tweets_AraBert2(3).csv_B0761DF2E2634ED2BF7439A87152174F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>created_at</remote-name>
            <remote-type>135</remote-type>
            <local-name>[created_at]</local-name>
            <parent-name>[predicted_tweets_AraBert2(3).csv]</parent-name>
            <remote-alias>created_at</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[predicted_tweets_AraBert2(3).csv_B0761DF2E2634ED2BF7439A87152174F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='predicted_tweets_AraBert2(3).csv' datatype='table' name='[__tableau_internal_object_id__].[predicted_tweets_AraBert2(3).csv_B0761DF2E2634ED2BF7439A87152174F]' role='measure' type='quantitative' />
      <column caption='Created At' datatype='datetime' name='[created_at]' role='dimension' type='ordinal' />
      <column caption='Neg Proba' datatype='real' name='[neg_proba]' role='measure' type='quantitative' />
      <column caption='Pos Proba' datatype='real' name='[pos_proba]' role='measure' type='quantitative' />
      <column caption='Sentiment' datatype='string' name='[sentiment]' role='dimension' type='nominal' />
      <column-instance column='[sentiment]' derivation='None' name='[none:sentiment:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:sentiment:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;negative&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;very positive&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;very negative&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;positive&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;neutral or mixed&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Jordan&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='predicted_tweets_AraBert2(3).csv' id='predicted_tweets_AraBert2(3).csv_B0761DF2E2634ED2BF7439A87152174F'>
            <properties context=''>
              <relation connection='textscan.093f9ym0pvaxn716xyl7n0ots7jy' name='predicted_tweets_AraBert2(3).csv' table='[predicted_tweets_AraBert2(3)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='real' name='neg_proba' ordinal='0' />
                  <column datatype='real' name='pos_proba' ordinal='1' />
                  <column datatype='string' name='Tweet' ordinal='2' />
                  <column datatype='string' name='sentiment' ordinal='3' />
                  <column datatype='datetime' name='created_at' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Jordanian Tweets Over Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Times New Roman' fontsize='16'>Jordanian Tweets Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='predicted_tweets_AraBert2(3)' name='federated.0cl3ccx02rtimk1dmwenu19pwqgg' />
          </datasources>
          <datasource-dependencies datasource='federated.0cl3ccx02rtimk1dmwenu19pwqgg'>
            <column datatype='string' name='[Tweet]' role='dimension' type='nominal' />
            <column-instance column='[Tweet]' derivation='Count' name='[cnt:Tweet:qk]' pivot='key' type='quantitative' />
            <column caption='Created At' datatype='datetime' name='[created_at]' role='dimension' type='ordinal' />
            <column-instance column='[created_at]' derivation='Day-Trunc' name='[tdy:created_at:qk]' pivot='key' type='quantitative' />
            <column-instance column='[created_at]' derivation='Year' name='[yr:created_at:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[yr:created_at:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:created_at:ok]' member='2020' />
              <groupfilter function='member' level='[yr:created_at:ok]' member='2021' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[yr:created_at:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[tdy:created_at:qk]' scope='cols' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[cnt:Tweet:qk]</rows>
        <cols>[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[tdy:created_at:qk]</cols>
      </table>
      <simple-id uuid='{E2A0CE15-FE6F-487B-989C-F9B90E9E4B4E}' />
    </worksheet>
    <worksheet name='The Distribution of the Classes Between 2020 &amp; 2021'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Times New Roman' fontsize='16'>The Distribution of the Classes Between 2020 &amp; 2021</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='predicted_tweets_AraBert2(3)' name='federated.0cl3ccx02rtimk1dmwenu19pwqgg' />
          </datasources>
          <datasource-dependencies datasource='federated.0cl3ccx02rtimk1dmwenu19pwqgg'>
            <column datatype='string' name='[Tweet]' role='dimension' type='nominal' />
            <column-instance column='[Tweet]' derivation='Count' name='[cnt:Tweet:qk]' pivot='key' type='quantitative' />
            <column caption='Created At' datatype='datetime' name='[created_at]' role='dimension' type='ordinal' />
            <column-instance column='[sentiment]' derivation='None' name='[none:sentiment:nk]' pivot='key' type='nominal' />
            <column caption='Sentiment' datatype='string' name='[sentiment]' role='dimension' type='nominal' />
            <column-instance column='[created_at]' derivation='Day-Trunc' name='[tdy:created_at:qk]' pivot='key' type='quantitative' />
            <column-instance column='[created_at]' derivation='Year' name='[yr:created_at:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[yr:created_at:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:created_at:ok]' member='2020' />
              <groupfilter function='member' level='[yr:created_at:ok]' member='2021' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[yr:created_at:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[tdy:created_at:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:sentiment:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.77961325645446777' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[cnt:Tweet:qk]</rows>
        <cols>([federated.0cl3ccx02rtimk1dmwenu19pwqgg].[yr:created_at:ok] * [federated.0cl3ccx02rtimk1dmwenu19pwqgg].[tdy:created_at:qk])</cols>
      </table>
      <simple-id uuid='{72A7033D-188E-435F-BBAC-12F6A2C70BAC}' />
    </worksheet>
    <worksheet name='The Distribution of the Predicted Classes'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Times New Roman' fontsize='16'>The Distribution of the Predicted Classes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='predicted_tweets_AraBert2(3)' name='federated.0cl3ccx02rtimk1dmwenu19pwqgg' />
          </datasources>
          <datasource-dependencies datasource='federated.0cl3ccx02rtimk1dmwenu19pwqgg'>
            <column-instance column='[sentiment]' derivation='None' name='[none:sentiment:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment]' derivation='Count' name='[pcto:cnt:sentiment:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Sentiment' datatype='string' name='[sentiment]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:sentiment:nk]' />
              <wedge-size column='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[pcto:cnt:sentiment:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='11' />
                <format attr='font-family' value='Times New Roman' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F449AD54-2E23-48EC-A6C8-8C4C506FE4F2}' />
    </worksheet>
    <worksheet name='Top 15 Negative Tweet'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Times New Roman' fontsize='16'>Top 15 Negative Tweet</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='predicted_tweets_AraBert2(3)' name='federated.0cl3ccx02rtimk1dmwenu19pwqgg' />
          </datasources>
          <datasource-dependencies datasource='federated.0cl3ccx02rtimk1dmwenu19pwqgg'>
            <column datatype='string' name='[Tweet]' role='dimension' type='nominal' />
            <column-instance column='[Tweet]' derivation='None' name='[none:Tweet:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment]' derivation='None' name='[none:sentiment:nk]' pivot='key' type='nominal' />
            <column caption='Pos Proba' datatype='real' name='[pos_proba]' role='measure' type='quantitative' />
            <column caption='Sentiment' datatype='string' name='[sentiment]' role='dimension' type='nominal' />
            <column-instance column='[pos_proba]' derivation='Sum' name='[sum:pos_proba:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:Tweet:nk]'>
            <groupfilter count='15' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([pos_proba])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Tweet:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:Tweet:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[sum:pos_proba:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:Tweet:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[sum:pos_proba:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:Tweet:nk]' value='624' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:sentiment:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:Tweet:nk]</rows>
        <cols>[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[sum:pos_proba:qk]</cols>
      </table>
      <simple-id uuid='{DB1E53B4-2783-4086-A9D5-C53F7D638F54}' />
    </worksheet>
    <worksheet name='Top 15 Positive Tweet'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Times New Roman' fontsize='16'>Top 15 Positive Tweet</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='predicted_tweets_AraBert2(3)' name='federated.0cl3ccx02rtimk1dmwenu19pwqgg' />
          </datasources>
          <datasource-dependencies datasource='federated.0cl3ccx02rtimk1dmwenu19pwqgg'>
            <column datatype='string' name='[Tweet]' role='dimension' type='nominal' />
            <column-instance column='[Tweet]' derivation='None' name='[none:Tweet:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiment]' derivation='None' name='[none:sentiment:nk]' pivot='key' type='nominal' />
            <column caption='Pos Proba' datatype='real' name='[pos_proba]' role='measure' type='quantitative' />
            <column caption='Sentiment' datatype='string' name='[sentiment]' role='dimension' type='nominal' />
            <column-instance column='[pos_proba]' derivation='Sum' name='[sum:pos_proba:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:Tweet:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([pos_proba])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Tweet:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:Tweet:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[sum:pos_proba:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:Tweet:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[sum:pos_proba:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:Tweet:nk]' value='624' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:sentiment:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:Tweet:nk]</rows>
        <cols>[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[sum:pos_proba:qk]</cols>
      </table>
      <simple-id uuid='{22E6A3ED-C74A-4791-813D-C0FFE31EBF9B}' />
    </worksheet>
    <worksheet name='Total Vaccinations among Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Times New Roman' fontsize='16'>Total Vaccinations among Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data(1)+' name='federated.0dm92np03a2w0g19wt8jx1tgbpns' />
          </datasources>
          <datasource-dependencies datasource='federated.0dm92np03a2w0g19wt8jx1tgbpns'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
            <column-instance column='[people_fully_vaccinated]' derivation='Sum' name='[sum:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Libya&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Syria&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[sum:people_fully_vaccinated:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[sum:total_vaccinations:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[yr:date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='2020' />
              <groupfilter function='member' level='[yr:date:ok]' member='2021' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[yr:date:ok]</column>
            <column>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[sum:people_fully_vaccinated:qk]</column>
            <column>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[none:location:nk]</column>
            <column>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[sum:total_vaccinations:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[tdy:date:qk]' scope='cols' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[sum:total_vaccinations:qk]</rows>
        <cols>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{640BFD39-F76D-4042-81DB-62E230FC42C5}' />
    </worksheet>
    <worksheet name='Total Vaccinations among Middle East Countries '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Times New Roman' fontsize='16'>Total Vaccinations among Middle East Countries</run>
            <run fontalignment='1' fontcolor='#000000' fontname='Times New Roman' fontsize='16'>Æ </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data(1)+' name='federated.0dm92np03a2w0g19wt8jx1tgbpns' />
          </datasources>
          <datasource-dependencies datasource='federated.0dm92np03a2w0g19wt8jx1tgbpns'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
            <column-instance column='[people_fully_vaccinated]' derivation='Sum' name='[sum:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Libya&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Syria&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Arab Emirates&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[sum:people_fully_vaccinated:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[sum:total_vaccinations:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[yr:date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='2020' />
              <groupfilter function='member' level='[yr:date:ok]' member='2021' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[yr:date:ok]</column>
            <column>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[sum:people_fully_vaccinated:qk]</column>
            <column>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[none:location:nk]</column>
            <column>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[sum:total_vaccinations:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[tdy:date:qk]' scope='cols' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[sum:total_vaccinations:qk]</rows>
        <cols>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{5A147D63-027F-4635-B034-3722B9B25901}' />
    </worksheet>
    <worksheet name='Total Vaccinations in Jordan'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Times New Roman' fontsize='16'>Total Vaccinations in Jordan</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data(1)+' name='federated.0dm92np03a2w0g19wt8jx1tgbpns' />
          </datasources>
          <datasource-dependencies datasource='federated.0dm92np03a2w0g19wt8jx1tgbpns'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
            <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
            <column-instance column='[new_cases_per_million]' derivation='Sum' name='[sum:new_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[people_fully_vaccinated]' derivation='Sum' name='[sum:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[people_vaccinated]' derivation='Sum' name='[sum:people_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dm92np03a2w0g19wt8jx1tgbpns].[sum:people_vaccinated:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dm92np03a2w0g19wt8jx1tgbpns].[sum:people_fully_vaccinated:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0dm92np03a2w0g19wt8jx1tgbpns].[sum:new_cases_per_million:qk]&quot;</bucket>
              <bucket>&quot;[federated.0dm92np03a2w0g19wt8jx1tgbpns].[sum:people_vaccinated:qk]&quot;</bucket>
              <bucket>&quot;[federated.0dm92np03a2w0g19wt8jx1tgbpns].[sum:people_fully_vaccinated:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;Jordan&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[sum:people_fully_vaccinated:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[none:location:nk]</column>
            <column>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[sum:people_fully_vaccinated:qk]</column>
            <column>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[tdy:date:qk]' scope='cols' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[Multiple Values]</rows>
        <cols>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{1209440E-7F6F-462D-9473-DAED36636845}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='The Distribution of the Predicted Classes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:sentiment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:sentiment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{232D1B42-C606-4465-8C15-F9D9651BED49}' />
    </window>
    <window class='worksheet' name='Top 15 Positive Tweet'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:sentiment:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[sum:pos_proba:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:Tweet:nk]</field>
            <field>[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:sentiment:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C7642FF1-3A10-4F20-8927-4DE79FDA2EB6}' />
    </window>
    <window class='worksheet' name='Top 15 Negative Tweet'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:sentiment:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:Tweet:nk]</field>
            <field>[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:sentiment:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{1A908AFF-C11C-4E4F-ACC5-C42D2FEDDC8C}' />
    </window>
    <window class='worksheet' name='The Distribution of the Classes Between 2020 &amp; 2021'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:sentiment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:Tweet:nk]</field>
            <field>[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:sentiment:nk]</field>
            <field>[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[yr:created_at:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E4E317D7-96AD-40DE-B698-04430FCE3826}' />
    </window>
    <window class='worksheet' name='Jordanian Tweets Over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[none:Tweet:nk]</field>
            <field>[federated.0cl3ccx02rtimk1dmwenu19pwqgg].[yr:created_at:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A39E053F-CBEC-4430-9269-1EDDD5F100A0}' />
    </window>
    <window class='worksheet' name='Total Vaccinations among Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[none:location:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[none:location:nk]</field>
            <field>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D9BB7B82-54ED-45E6-8EB3-4573D77AEA7C}' />
    </window>
    <window class='worksheet' name='Total Vaccinations among Middle East Countries '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[none:location:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[none:location:nk]</field>
            <field>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{39BB389C-6C8F-440F-868A-379E0BF79F98}' />
    </window>
    <window class='worksheet' maximized='true' name='Total Vaccinations in Jordan'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0dm92np03a2w0g19wt8jx1tgbpns].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[:Measure Names]</field>
            <field>[federated.0dm92np03a2w0g19wt8jx1tgbpns].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1126CEFB-2F5C-41E7-B073-73EF04226869}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Jordanian Tweets Over Time' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='The Distribution of the Classes Between 2020 &amp; 2021' width='192'>
      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
      FkaBVELxJEePHqUn07H9FQnRRi0EIMzfunYF04eQLmP44vXS0ijQ1MgID268zy/uz29/RUK0
      UUtdoI5UF0rModgwt78iIdqopS7Q/kN7WCxmuHz6zPZXJEQbtdAFqvP+Tz/GKj/i559ObH9F
      QrRRS88E41tUKjX0cGj7KxKijTbsAlnVVR6t2fzhn/0T8ouzVPWedtUlRFtseAZYW5phZbWO
      Ho7R3xfj3t2pdtUlRFtseDeoZ9X4v//7+zTVGLVKlW///T/mcPY5D8S0QO4GFbtNC7dD+zi2
      g6rrqC/5NJcEQOw2LQyDKughufgVryeZJVIEmgRABJoEQASaBEAEmgRABJoEQASaBEAEmgRA
      BJoEQASaBEAEmgRABJoEQASaBEAEmgRABJoEQASaBEAE2pbOe5pfmGJx1WDf4ePozQLLFZ+j
      h/ehybRgYpfaujOA7/B4ucy+A/tJ6k0ezqyiNYvM58tb9hJCbLWtOwP4Lk2jxPCDYU4c6qej
      fx/7Oy2mKk1cN4nneXieh2U9a6I9IXbGlgXA8xQOnT5H2K0xs1zCdEwKNkQSA2iahqZpqKpK
      OCyTZovdY8u6QKqm41TzjC9WOHXmLMcHouTMCAf60lv1EkJsuZZmidwq8rMoYreRYVARaBIA
      EWgSABFoEgARaBIAEWgSABFoEgARaBIAEWgSABFoEgARaBIAEWgSABFoEgARaBIAEWgSABFo
      EgARaBIAEWgSABFoEgARaBIAEWgSABFoEgARaBIAEWgSABFoEgARaBIAEWivXADqVp2x3AiG
      WdvpUsRrYEsnyNhulmPyHz/8NwwvP+BY9gT/4rf+JbFQfKfLEq+wV+oM0HSaTK9O4XgO47lR
      3h//G77Jb/s6nsdHj2b40dhDKs3mNlQqXhWvRAB838f1PBQUOqIpQMH1Xf7n7f/OeH70hduP
      5lf4Lzc/4b2pcTzf58HyY94dGeL6zBQ/mRjZ/jcgdq1d2wXy6nXcUgk9m+Xjxwt8MD2BikHT
      OUd3/DI1+2NsJ4emaC9s64cPhyg26swWiyT8MJ8szvLFeWOlVsNxXXTtxe2I18+uDIBnGOT/
      7b/Dmp5m+fQAPzl3GctTMWsKy8MdeK5Pz6G3yfY5/GT8Nn/bqnF28AI+Pj8a/iHj+VF+5+Tf
      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
      X4LGlrd+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='The Distribution of the Predicted Classes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 15 Negative Tweet' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9V3cc2Zmu+UR6B+9BAiRQtMWyqpbpbqnN6ZlZPWcu5i/pp8yaq5k1c860
      unW6JZWjBeG9SwCZSO99hnd7LpJk0VaxpFJXlZDPFZmxY7vYb2Rk7BffJwkhBH36XFA833cH
      +vT5PukLoM+Fpi+APheavgD6XGj6AuhzoekLoM+Fpi+A/1QEutxC0e3vuyN9nvCdC6CZPeC8
      brx6wKixdZB77gOXzMkex6kSu3s7WLb72vr00jGHRfVr29zd2cRxLArpBA3F5ORgE1m32Nrd
      Y2t7izdtdRSKxWf/rtVqAJxubiN/TVvFk2NKXZVqsYLztb16HptSocLxzjKPN4/QtBYHR+dv
      ffZTHFMjcZZAt96+ZQBb73J6eo7puk8/YHPvCABD6dJV9a89X67lOM1UvrGdTm6fRPW5a+9a
      xHc3SJdb33huJXNMrq5RKZU4Ot6jq9vg6KTP4rSe616tWqF8vke6Yb62nm69SPb0mEzj9WvG
      Vho0lK9uQN+5AGxdQbNeXHCObWLoGl3FANdG1Uxcpc5pRSeMQbMj4z53inAdGrUquuXgmgqq
      6dIup7l//x5n+TogyJ3s8uWX98nVOihyF8vQyKSz6JaDpnRxXIGsyMhyFwBNU9HlJmfJDLKs
      4ghwDB3LNtndWCFfadJod1E73TcubEtXURUF0xFEB6JITz43dR33icjq2RMere1hOL3Fpmoq
      pqqjagqqZnJp4RoDAYGiaC/Ubahd6q0uQrhUi0WaxQS/+c1veLyTQFdVXKCQPCZztsenqyev
      76BjohoWrVoFxbDRVA0XsPQux2cphGVyeprAtB26igKAxyuR2N/kKFVGred58GiVjtGbgVY5
      xYNHayiajmZYL7bl2qiaQf5sn5WNHSr1JqrcQbNcXNtEM22UWo6qGUAYCg6C1Pk5AigWCzhG
      l/XHD1nbOsYGTF1Ftx1isQF0RcFxBcVMgmQ2xZf3Hj9rNhKN4hgquvXiDdOxTAzTJhgZQLJU
      DLs3BkPTcMTT6VHZ3T8ifhSnXkqxtLr73QtAksCxHVxb5vHjLRKbaySyCU4y9V4Bo8bKThJP
      dJyfXJ8hfppGetKLTrOBbjuY7Tz3Hq+xsrqNbtnousF5MsnM/AJCV3Fcl7ZiMDM7jbAtHMdB
      bVdpNZuc5+tomo7t2LjPreSjnQ00T4xri3Ocrq/QdSGkl9hIdXj3zh3MWprNgzOcJ0pUGhVU
      G/RynK1kmZXHKyT216jpAtsy2V7dwkLQqldQDQut26TaktnbOSaISrndW+Dx9RU6lkWlo/HR
      T/+GanKfrt7rmOuY7B/07sQHqw+4d/8e2YZMPpfFRsLnDxDw+9h5vIoG+Hw+pGAQr22Tje+S
      qcu4ZpsHS1sUkwckTg54sJuhVSnQUjW2l9cxEZwcHDE35uWgpDMRtVnfT+PaDo1SnrXNTSav
      3iQZ3+doZ4/h0QBn5xWEsFldWWcqarCX7WI7DsI1WH64TKOYYP84zv2VQ2YXbjIeslld3UQx
      endWvZpg97xKdGKea1NhztJ5vEjU0nFKHZ10Kotcy6P6RxiOejANG0mA47hsrq7xVGo+nw8I
      4vPayIUjdlINdrc30S0Hx3Gw9AZLy7ucrq9ylo6zd1YidbBCRfnqujeT2xyXWqwsr6O0q3Tt
      MJNDXhLJFMWzLaTv2gphGx021nbQhYfBSAAbH/5AkJvXLlNt2szPDHOyt0661MQTCPPOrffx
      2TLTs5dJ7m8SnllkNOxla2WTK7fmSSaKBDwOumEiBQe4c+c9xgb9PHzwiNvvf0Q4HMZo5thP
      5BmfmKJVLyMkH67jcuXWB0hGm7nLcziGzOHRCY6QGJqaw6+WSFU1Api4gQHevXWDgWiIaibL
      0JV5ihuPcObfJ1jcYb0oWLw0zuDQKJfGQmxv7jFw6Tq3FqbYX37I+K2PMXJ7bJ93uDI3jW7B
      xx+/j9fRWb7/JZZvkEBAwrUdgkOTfHR7nlpDZXZqlJ21JWxfFNfUiE1dxqjnkA2BcBwGhkdQ
      WzX8I3N88t51vB5AuCQPt8lV2jgeCY/kIxYNYjpeIgEPhi5jWL1v0aHpq3xwcx65lmf7OMc7
      V6c4TWRZuP0RUjtDttZFUxR8gSAeHKKxYQzD4N2PPkEvxzmvO3hMnVsfvc/50Ratrk0sFkE3
      BbGwD8vU0SyJhes38AmbIb9F1z/JRFSwu7ZGuSUTCMe49d67VJJxVNeLbSjg8ffu2Lbg6vV3
      eWduCkdvs7O1T3jqKuNRGB6fIeT3IoQgl9jnOFXG6/UyNDHHe4sTbG/uoguJWDiAkAJ4PC6m
      ruIJj3Pz0hBOZIyhgOBk4yHxjiDqkfD7PFiWy9y1W1weH+B4fem7F8BbIVxq5SL+wXGGIsFn
      H7u2TjZbBAkiwxNMDMfeWIXarpJIF4iMzvDO5cnvvIuupXF+nsEbHebK7CSSJL22nKV1yZWq
      SN4Qc3OzeJ8VE1SySVTfCFdnRt/ckG1QLFUZmr5ExPdqG8JWyZdaTEzPEvR99bmpdDA8IQbC
      gddWK1yHZrvD6MjIW474eRxKxRqT01N4Xj/sb0S4DqViiaHxSSJB/x9XyXO060UszxDjI5G3
      PqdTy1PowMLMMNVml0szU0+uo0u1kEP3RL8nAfTp8wOh/xq0z4WmL4A+F5q+APpcaPoC6HOh
      6Qugz4WmL4A+F5oLKQDXsbCf7Pi6jo3tvM6HJLAtC8u0ntkcni9vmzpnB8doCCzL5uV3yZb1
      onXAtnr1WJaFZVmvlAdQGg0U+9v5fJ721TCMZ7vYLxwRAstQOTw+feW4ZVk4tv3a876pPcuy
      EMLFsr7B2CcElWrtW9YPjm3x2svyreldxzeN8EIJwLUtOl2Z5vkW8XLPYdXInXH61KbxAoKD
      tWW2HizTeO7Tbu6A3WSOz3//KQyNEUZjZWnnlQleWl4GHKqZMwpNjcONdTqmxsbSFquPV3jF
      LigcsulTjk8yz9pvFjJkqt9sJBOuwc7aY87zjVePGTX+4z/uERkew/PSZt7S8jLpk20KzZ5t
      Q5Y7vJ0WbLaWNtCsDusbOxQL1TcuMFtvcrC7T7mlvXLM6FSoKzZCCHRNe0GIxaMlMp3XjFU4
      aJrO2+9eCXaWelYSS1NodXs+iVqliGG7+L7+5B8n7VaDYGSIUMCL67pIktRzhEoSPp8PC0Fi
      f5PsZpNLVxeQRIl//dcV3v/Z32Hkd0l1JH71tz9/Y/1ef4S5mVFeNrDmz3ZY2jhg5sbPEIDR
      qbFzfMTUwtBr6xHCpViqMDM9hXAsyuUa6WYBTzdLzRng7z9cwLKeXiKbaqXDxOQollrn/oN1
      AmOX+eUnd0hsbeIbGOAokWQ2pvPl/Q2uvneH9N4+N3/6N8xPRXFcCb1ZYP0ggeQLcWVx8eXe
      0KjVkUyFjYMzPN4g84uLyLkjyjLc/OBjZkZjvLwx3CzlMJQqhfYHfHJrBleAxyNRSB5Qdwa5
      NqxTKhURyTxTP7n23NhtTo5PKLRN5kfDHJXqxAYv89HCBMOXLwFQSR+xdz/F3/3zP+MpHVMM
      zaGeLJFtaMzd+oTJqI9Ll6YRRpN//4/7TN38iA+vDnHv0y+Y/9n/xPXJGE87bMtVNraOkXxB
      Ls3NE/MLTraW8P7617/+9deuph8ZmXicgdk5vJ0cS/tpjpbvoQQCPPr8LmCwvHGIqzZpSSNc
      GXRoWyFCGHQ0m2q1RLFQYtBvkmtbmIpGSJIYXpinc57EjQ1Bt8JRrs3M9AS76yuEgn4assvC
      3CgH+2d8/Mt/4tbVKaqZJLKmUKo2kBUXo5lD9fhRFBOf5DBzZR6/BIcr96l3KtzfyPLu7Xks
      BwLCoVYsojsKGoMM+3RyNY1L00Nsr67RUTqkCi2GQjAweYXx4SDFQgVdt1BrWUx/BF038Vg6
      6WqXxavT7K5vERmZIOKXSCfieCLDtNodxgcCeGMTDEUCpPY3qDpRRqN+0ok4UmSYXPKYyPAY
      QgoyMeDjNFNmbCTG6f4+lmRzkqhx591FWl2D+RGL+zsVrl4a5Xh/k2a9heIZYnrQR2R0mpGg
      TbrYJBZ0+OK3v0WLzRBz2yhSgEo2z9jkDJVMltlrC2iVNF1iaKUTOt5x/F6Fjcd7jA35SFe6
      zEwNkc21WLgyQ25/hXPNTyOdxuNRODkrERwYJLO3TLptUcsl8Q5OMBT2k0/GcfyDlHIpfH7/
      X54V4nxvjZoII7XLiIEpzG6T6OgI3VaXS5dmCfq9z55bg9EhxgdDNGtlVleWGbx8h3ffmcW0
      XUJeB8cbJeYDXyxGLb7DSdPAq3UITV5lPOYnEAxiGybDk9MMhr1sLj1Adv2MTM1zY26YUrnF
      4MgQSruN5PXh2BYDY5P4hU1kYIBy8oCdRJWJsSiS8DM2PsrYxATn+yvsZrr88hefMDM9DXqT
      la0jxkailGoaCwuzSHgYGh1neCDy5CYnkFt12qqLT7LwelxWlpaIzN5iYWqIYDCIaVoMjIwR
      FDrVpkx0eIzBoITkD9OtpFjdS3Lzxg2GRgdQ6m1cjwQI/KEokxNj+FyN+w+XicRitDsmi9fm
      8Ajw+ALMzM7gl1ziOxucFmpMTs6weO06ltzE9YWZnhrDVZssrW4T8IEdHOfK9DAerxfHtojE
      BjHkLk3V4P3bNzDVDo1mm8TJCXN3foKrdQmH/GiGzWA0RKlQxA4McOfqOA/XDrlzYw5faIBq
      eovPl3L86u8/oVuvEhudYmQoim1ZRIdGifocKrU2oYFB7E7lL08AQgjcJ3/44fF4eo9AHg/C
      FXg80mtNbY5tYrseAn7vG01vQggcxwFJwuvxvLaccF0c10WSPHi8nlceF15GkbuEIjGkJ0/Q
      Ho8HIQSmYeALBPE+daI9GZOAXt1v4VBzbQvLhYDf98YxPY+myPiCEXxeD5IkcF1e047AdVxc
      IfB4vK/tx9P597xujp4ccwV4va+fw6fnPv2hLXm8eL3eV+ZSiF49HklCiK/6KoRACNF77O0N
      4pXfPk/HYhrmX54A+vT5Nlyot0B9+rxMXwB9LjR9AfS50PQF0OdC0xdAnwtNXwB9LjR9AfT5
      WuR6GeUlv1u58vVBspRmg0zp5TI2lfLrPFcgbIVytUWl2nyjp+htKVfKb13WsdW+APp8PbVk
      nLpu02o2UI2eq/I4Hn+xkBB0Wg100wbhosgNEoe7lDsWpq5Qq9UxLJ2TePL1jZh14okc8dPM
      qwIQAl3pImvGs2O60kVWDSxdRVYNTK1LMpmkq5nE48conRaKbiIci2az1QuM5dokj3f54tEa
      1pNIWccbq3+ZZrg+3zGuTa1SplrewgxNYAvA0qipLuNDEbInO2QaCqYb4+9/foOdvWOwZWqK
      wen6EsOTc/giM8+qa5QrDIwO0JYtCsUC7199NdRJpVplcmICIVxWHj9A9Qzwv/zDL/Fi8MVn
      nxMaGgVbRfJFGQqYlDom2bZArmTYPY7Skg0+mh/gOFNieO5jPp412Tgq4Dgatv0h7Y5KZHCo
      L4A+X8/Q5AiP1h4zEg4RHZ3jg2tXSW4v8elnn1No6YyHbXI1m+uLU8TGZ5C8IX71D/9At15g
      bWeZWi5JpGsiRYdw1CJ379+lUSgQHB7FssFWWlSyUaav/wS53gRbZXnrlJ/91QfsPvod6Q4o
      bYXwWC9GVPX8GN0TBEtwaTjK9t4x49OXaDdaeLxpCjWN0HCLcq7IZiuEHQgw5vFAZIb/9Z9i
      ZJNHPLr/gHyxyPz8pb4Vos8fi0mx0GFmdvy7rVY4nB3sogofhg0ffPAewSfRxgylzv5JmQ8/
      vI3PY7G/tkHXM8hPP76D71s8zGvtEoWmxNWrU30B9PmxInBd8cQ498fTF0CfC03/LVCfC01f
      AH0uNH0B9LnQ9AXQ50LTF0CfC01fAH/hOM4fE2jrm+j9ffTXvT58c8CxP63sd81fpADymQQd
      zXrlc1uXSaTPiR8nvtP29FaNrvkdXkBTplB7TVQoAFTiR9lvrCJ3FEd2LA73D3iaT66WTZNv
      tHv/sVV2D04Bg/hR6htMaAYnR+c8HaFwHU4Pj9Bs59XzhUspFefu3ftUOs9nnzSJHz/vBdKI
      H6XInR3w5Zd3aWouZ6dxMidHdF69dM9InB7xfJLMdilHqSGTOzt+zrRn06xWUU2X4/gxpcwp
      LfX1Eex+9AIw1RY7ByfocoPP//23LO+d0W7WqeZTbOydYAs4298gX5dxLYNao0618uZQfZbW
      Zm19C9XszXKzkGRlY+9ZAjhcg/2tHVT7qyUj2xZaq/3a+oQQnO5tUGjI2IbKeSqF6Xz9chOS
      1NvgsVQK1Ra23mV9fetJ5kmTSqUJwqJcejkSnEt8b4u2ZtOqVCjlTmk2S2yfVMBWSKQzLD98
      hGq64Avj1lOUFINqpUH+7IBM5asxGJ0y57nak0XvUK006JRT/Pbf/o2tnS2y2Rz7p0XAplJp
      IGyD3Y11WrpF5jzF4gc/Y/aFdEY21UodYatsrm0gGyaVUoN0KsPNT/6GiZiPWq1Cq1rBeOle
      0q4XSOd60efqtQqOcDk/2ubBww1a3RZdzaRVrZBPn7ATz+CaKrs7++iOoFKt0G3V0CzRu7ZL
      j0jmawigVEr9+AWQSxzSKpxzXGrhjw2hKwqu2uSsahDUS+SL55zlNXYfP0S1HYT4KkSGays8
      eLj2JHuhQauW59HyHtODLrtnBY6OTxieWeDabJTf/+t/5zTfpFs4pWYY7O6e4Toa+/snmI0O
      ql5hL97LO1w83eUkX+fs8BjdKJEoaGw/eoThOBg22M0syXIX4Trs7e/TKpxwlsqwttdLfyr5
      /eytrWDZJq2OQvb0AL/PZHW/8NXAJT+ne2t0rS73725gtEss3fuUs4rG/v4RjmMxMDGPz+7S
      bnXB1ml0NQxdw9Q6PFjZ5L1PPmRvuZeVMX56zN7WNrZr8PCLBziRCRYuj5E7PKRrC0zLQpM7
      DI6O4HiHGQ7pVOu9bynhujRyp+heH/c+W+aTv/8v5Lcf0TJBOCaK1svp6zgOheNt7HCE3b1j
      BBJ//Q//yNnKEl1HPMnnLHBdh3v37gEu9+/dY2B0liuXxrh/9z6OKzDlOumayZ3b8ziGjesK
      1E6ViurHLhyyf3CKFJZIpquI58ItOpaFJxAkc7TE3ZU4ckP98e8Ea+0Kv//Nv2CPLTIZ8+MI
      CbXbIhAZQNg6Hl+QQNCH1xvGtVTmb95Bb7a5eesdXEvmv/0//x9DExN4COKYXSxfhIjHxnB9
      4NpEoxFGJ2eZm5tjMBpEWCqPv/wdx2WXa1cmwXWQJC/+aIzb777PcMRPMb7B0nGRaMBDIBjG
      F/Di84ZxTAVZMwh4JGyPl5Dfj4SLK0kE/FGu3X6X0Yhga3UdxbRxhIRpW4QDISRhsfjR3zI3
      Kjg+KGGqBVqKie3A1MJtro3C6lmViJxl87zN1dkRPIEwPl+Qj376U4ZCPd9jo5hkL55j5p3b
      DNpV1g5SfPTzXxJ16jzcPOe//vM/0sidEk+VcIXA0BS8gRCmaREOBwEJSQjwBrjz0SeMD/iI
      b69T7fZiewaCg1iGjOsJ8Yu/+Tm+zhmPM2F++f4A//f/+RumF+cRtmDh3fdRcnHqioVjWwh/
      kMjAODemAuycZRibvs4HNy5TyydJl5qAYGT6KiG9xEmuRqPeYGL2KrffucRp/Ih6vUV4cBhb
      U/EEAkSjEVTVZGjyMnNDgtD4Amp2m3pggXcvhdnZWKfSlH/sAhBkT/YoG2E+vnPtq0BSb4Ol
      sraxw8J7H2FVc3jHrjA5+FXGRbVRpqgIFuamX/iabJVSHKYafPiTj4gGXv0CVeo59lItfvLR
      HeR6kcjoLKGXPLe2KdNou0xODH7L8b6K3G1SLhep1zTm5ydIpku8++HHDEfenJlRqZcoax6u
      Xp7sjc3R2NuNM3H1GlMjr8b//FMQrs3x3hZtHW7c+ZDR2OuzWr6A0aUgw+zYwHfYE3AtncO9
      HRqqywef/IzhsPfHLoA+ff40fvS/Afr0+VPoC6DPhaYvgD4Xmr4A+lxo+gLoc6HpC6DPhaYv
      AAAE5VwG48/hG/sucSwa7e733Yu/KP4EAVgcbG5S7ejQTLJ0XKZWLWM8lzmulj7hNPdiNDDX
      dXAcF6WSZDeRYGV554/uQXbrMXkN1laWniWs23y8jP6G8r3sIWAoRTa3071RqE0+//3vqGge
      /B6d5cerbC6tY75F+0I4aGpvB7SRixPPNCimTl4wXgkhWF6+z9ry2rM+OraJppsI4GRniboG
      5/Ej9BcEKLBNg3a7w1PbkSY3ODw8xbBd5OIJ+6nqs9KWabxlhsevaFSq2ICW32E7qwAtlpeO
      vvaccnybZF39dg09IX+yTqbxZGZdB03VedlCuLy89Mp5T+fo8fLjP6rd19HNH7Jzev7tBOA6
      JudnJ3R1i3alQKFSZGNllZZmYjkugUCQ5zdje4tdUMse8+kXS3QUmQef/Tu//bd/p6E52I7z
      XJ5ZQbfd6U2Ia7Gz+oh7S6t09SfHHZ22/GJyUce2cAVYRped1UcsbRxgmDbCUll5dI+l1S16
      pwuazQam3mZ//wTLcbC0Do/vfUaqqhOLRhkbH8Uj9fL52s/l/ZXbHZwne4X5kx0+f7iOZruo
      3TaaqdOsN+m2GsiGje0Imq0WtmOxs3yf9b0zXHr5eG3LAgTtZgNTk2m2ZOqNBrZtIQQ0m1Uc
      vcPdzz/nNFfFtS1WHz/g3r/+dwpPMozWcgnK2QSJqoJwHUxD5v5nn5KtddFl+ZlQTKXOw3t3
      WduO87wH0rUNkqcnyIZNIXnAcfKc80SarqI+yZsssCwHrdtBs2xMTUbWXrwVCMcmnzziiy/u
      U1eeHHM02vKL5WrpY764e4/TXIX1+59xnKniWCaJw23u3n1IRzNoNtqonQr3PvuUVLWXvtQy
      NXZX77N7mn/lOqudGqtLD1jff+rmFXSazReydTqWxtnJGZplkz3Z5fHKGmfJLIph4doG+5vL
      3F/axHR66++tBHC+v0pVFRjdCrt7Rzxe2SKTzjAUkXB8AQrVLpamcLC/i2Y61CvFJ+5JG0VW
      Odo7ZChksrR7TsDvQwSiSLaG9Kx5QTabJRgKUj4/odpuka8oTA76aXY1dLlBpWUQ9LqcnJ5R
      yx5wf+MMRevSbrVplhuMXbmG3ipj2xbdVoWq4mHAD12tt3pSx0coboBBqcFRroGrtel6Bskk
      T3j/ow/YXn6IoirY4qs+lfNZ8AdRG0VShSr7B2dEJYOGalAvnJMpK4xNjlE+3adpCQxNpVlr
      4Zg1zioWzeQ26XIdR3zlhUgc76OIMGMjYfZ39nEBTe1S7+i0s4cYwRHyuSySx8vwQJRgNITS
      afH5p18yOHeHmZEQfm+vj67VQjcE8dNzTvY3KTfb/OEPn9GqFFC9MbxCQ9dtEnurNDSB2iqy
      fxhneWWboekrjIY95ApF3GfXwYNtaaQPD6gqBmo9x+bBGZquo3VL/OHzFRRNRnNCXB7yUG4p
      KK0a9a5N0GMSP01STGyzvJcil84yNDFJt1mhpenkTk7pttsQHWUipHBerrJ/lKR0dkxgYoLU
      07CJjklVhnzqiNTeCjtnBTodGUXu0Kq3uHztJoX0GYdrD4nnaxzu7KC7guONNTq2QK5l2T86
      4vH6AWOXrjLot1hb36JTy3H/3gMYnoNmnnJXR5Kkt7NCdGtZto5S+Dw+grFBrk4PcpbqORN9
      wRh33rtFLr6HGRrn1uJlzg/XUDwjiG6Jsupy5fIchqYzPuij3HWIeUxahsSdOzeQWzKTk8M8
      uveAhes3ON3bwT86iteF4ak5rs3PoNTSHGUVLo8F2D46IxwIEAwFCcUG8ZgapgtIXq5cu8WQ
      V+Xg+BwHiam5ReZnxlCaFTb2Tlmcm6DU0Lh5+x3UlkzmeIXThp/r8+NEYzE0VeHKzffwaCoj
      U6PE15YJTF9FK51Rlj1cmZ9FMxzevXUNHw7p5Cmy4RIZnuLK1AAnB/vo+LFsm/GRGJYUwelW
      GV+4DVqXsYkJhKVwetrr3+TlBQa9OvvxBH5/EAs/A16LoUvvMDUc7cnQNdhaXaGpukQjEUam
      57h+ZQZHa9OQdY7W71OxB7h2ZRajWUfz+IgGA+DxMr94k+nRATrVNNvxDAGPj8DAEFcmoyTz
      Dd65fouxwTC2UqcthhiL+cif7ZMoyXz4yScMhX0U02fEz87xRYYZigZRtd4D5sDYDDcX52gV
      TjlvCKajLjunWcJ+D8FQGJ/Phz80wPXFy8Q3H3FQMrl5dRoJCIZCWLpOMBxCeAP4XZPpxTuM
      Rn2UilkauTOWj6q8d+MypisRjUZxTb33LSV5CfkEtUabYCRCZGSaj28v0Cwk2U/m8UlBwkPD
      XB7xkyl3Wbxxk0bmiJrhIYyJZgpCIT+mCPDe7cW39wLpuoJlSQwMvBrH8WV6vvsm+IKMjw6/
      IUvfixhKl65m4A9FGYqFXzgmhEun1cJyXGJDIzimiiT5iURCb9N12vUKIjDA0ED4mdHL1GWq
      9S4T09MEvK/vn2PqtLoyePyMDA/xbbx23yW2ZSIrOkNDAy9kVjTVDpWWxtTUBH6vB0vXUSyb
      4YHYK3VomoLjSMRi33D9hIvc7eANxQgHet9cuibjC8ZeG31NCId2s4XtwsDwMLauIHmDRMLB
      3nFLI1duMjE1Rcjv/caxurZBqVRleGKaoMfGdL2Egy8Z+4RLp9MhEI7iWBbRaOTJGLs4jp9Y
      7O3WBfQDY/W54PRfg/a50PQF0OdC0xdAnwtNXwB9LjR9AfS50PzRAhBC/MkJzfr0+b55owCE
      EDQbNQzTxtC6tDs6htrFsF3qpQx7h8m3EIBDt6u8JvGZS6vZQDctHMtA1V913ghhI8vy688H
      wKXblb+xB6890zFRFOObC35r7Gf1druvmtZMTabZll8dj63TfSmQl2vryLJCV3nR2WSoCs3O
      i3WbShfjuVhDpqqg6eqzcCQv97HbfQsvj3CRuzKd14zjWR8tDVl/fcApEChd+aS60zsAACAA
      SURBVBWvz2tLCotuR6Yrq29cU9VaDffP8Mb+zd8ArsXJ3hbxdJnk4Q6bh8fkTzfZ29tl66zG
      wuLcG08Wrk2nqyDQ2dk8fvKpTS55Sr1rIoRL6niXvdMMSj3PaebVtJuurbC7t8vOZi8jYTkd
      5/HyKrWu8ay+na39Z+Xb5SLF5uujqWWScZrdrxaSqVc5OMojXJONh3dJFBrfybeZ2myRLffG
      sr29+cpxuVlibWWTjvnSommn2TxvAlCt9s43O3kO9uNsnrwYBU5tlllfX6elfuWcK8d3KGou
      uiqjWw6lxAnp3CkHiacBwFwq+XOqTQ2Q2d58c2Q8rV1BNgFhs7tzwNr29hvLmrUk+9k3RbBz
      ONzceytTIbTZXj1ke/f0tdfBNWXie+vsnZQAUJpl1lY2aOs920syXXyrVl6H99e//vWvX3cg
      tfmIbnCQQqVL1KNxkiowPRRkaOFjnOoZ/qEZBiMBLKXGf/zHH8jWVa7OT6KpBrsPP2XrcJ+O
      GKaTOSVTyJAsKlweD+KNTqBk1jnXQ1SzVRYvDVGvFnj4aB0pOsZwwGR9J8HM9BD5QhXh+Ji/
      OkMifoBqGISHZgh7bCS/h5PtddL5PKe5FtcWLxEORfFKAlXT8LgWqtym0jGI+myk8DBhf0+y
      ttWlXHMwyiec1Nq0ynVmFq4QfLLVa5s6lgumrlHL5JBGhimkEgwMjWDoGl6fH61dZmV1i/DY
      LNGAF1VWCEbDRIIBMoUycqfJ7GiI33/2BRVZYn5mkIf3V/BbOsHZKwz5XTaXHrC1d0wkEqRp
      h1Fyx2TzRTLVDuODPmpNE8trc3DvLk0pxqXRAA9Xd4iIDs7wIsn1T9k/zRH1e7D9Xh5+8SX7
      R2mmJwZx/RKGHWV2THCe6jA7N0NQMsiWi3SaLhFqfHFvCTc2w3iww8PNHDGpze5xilw2jScy
      RKfRwMZh8cqVZ+vC0Zosr2wghUeIuG1K5gCtxCr7p2mk0DBDIUhmy4wOxyikC6RT+5ykGsxf
      uUynlGRpZY1EoQWdEgfHJ6TzNUYnopSzHfD7mL88iaYZ+Pw+6rlT1vfOmZwcJp3Ok6vUuHNj
      jvtf3MdVZbwTM6R21khUZSYCBhu7hyRTWUIDwwxEgmAqVLo20ZAfp53hv/32Lro3wuz4EM3M
      Pr+7t/KSACyFatfGUlsMT8/hmDpyrUIoNoA3EOPSWIiTVImg36HRhfnZMSqZfY6yKlanhKo0
      +fL+FtGon3JDYTjiIZ7MMz8/RSZxTrvbYfrqDUZGR8A00bsVqs0OA2Mz2HKDhqyhyS0S8WNk
      XcETGcHVHebnRzk7SRMeGEDv1Fl/8CVFWePsJMvclUtkkwmKqROS5Q7tao5Hy+vUCmecFzuc
      J9M06zUm5q9hVs+omBFifoWVRzvkywUkyUZWHOZv3KSSOMYTG0bJ7vOH5QNO9/ep1/PkWwrV
      SpvFhXkONlYYmJzDUeqcl+rUcufUmy22VpYo1yocnuXxBiMgl8kUS7R1P36/j4X5ywwNBHFc
      i3wuz+bDe7S9QwyGfIxPTpA4PSc2EEVYCtlcBUvrEh2ZQHMkBj0a+brFrRuLjEQDOMIlk86Q
      L9aIRYKMjw1yXmxgdmp4QjEMVWViehjVDHNpIszh3h6aYVAs5HGDA7Ry5+QLeaRICMkN0qxW
      SBzv4gaHCAUlcqk0rmujOj68ks3ClSvED/aJjY2D1iKRa9KuZSnki2QrdZrFNKY3jN8fZmY8
      xuHeHu1OB9n2EvKalHMpUtki6zsHzMxOk04kGR4fR5Jc0ucZXEPBExvHdRzmLw2zur7HpblZ
      WpUU1YZMOldjMOonNnaZuekJhgZD2I5NqVymXKmgqyr+cAy/18fo5DQz0xNYrSzJho/5iQhf
      /O7fyORKGMJPIDrIlalh9jdW0Hyxl6wQroPlgiRcPD4/HgksU8cwbQKhMH4PqJqGEBAKR/B6
      HDYeb3Djww8I+P00q0Xass7lS5fw+73PWZ3pOe88PsLh4DM/jmMZaKYDpsJRPM7Y3G2mhoJ4
      vF5c1yUYDiMcF59P4mhzmWJbJxzrLZqxS9cYCAJIfGWPEQgh4fV6EPSe74RwEZKPcCiIUkux
      sp8h5BeMzN5gfrIXeEny+IiEg1RTx5xUZLyWzZVbtxiJ9bxDjqFQkR2uXppE79ZYWl7H4w2z
      cPs9Lo1FMUwbr8+H67h4vRI+fxBcC8Ny8SDwBoIEfD0fjBAuuqYhANcVeH1+QsEAhqbi4CEU
      CmBoGgIP4XAIU2lzdHyMf+wqdxZnkJ7WoWpIXi+ukAiH/KiqisfrQzgOQvISDvlxXAm/V8K2
      TUzLAclDKBTENnRsIYFwCQQCGLqOx+vFcVwCoRA4vfKBYBgJF7/fT+n8mHzHJOz10NFdPv7w
      FpZh4ZHAFQLJ4yUUCuH19P42wbQcAn4PR9sb5Lse/vavP8Ljus9dL4lQKIRpaDguhCNhXMfF
      5/PSqqRZW9vFNzLLe3duMxSUsFyIRMLPfGXP5lHy4sXFcgXBYAif14skganUWN08ZSAWxPSG
      effaVTwIfMEQxbNduv5J3pkZ/mF4gVzXATx4vi+32Q8Y4bq4gPdPzIb4vSAE9pNF/UPlByGA
      Pn2+L36Et5U+fb47+gLoc6HpC6DPhaYvgD4Xmr4A+lxo+gLo85eLeJp26c38YATQrmRoqq8L
      zSZe2FD7c+HaFprR8ykVs1ksV2BZX5Ou8EnfbNt+xb/SqZRoyipH+zu0v8Z0V01n0L6mdq1d
      o9pS3nYIzyjl05hviHJXKuQwrFcPdhslGs/H9hEO2Uz+a81s39R/6G1YZbI9P5Oha9iOi2Pp
      5IvlbzjzyfmuTTKZQgjIZDIk95fJNQ1AoGsqzkvRwGxDIV+u0Cyl+OzTu9RVE3AoZhNUmhpo
      TdKVLp1alnQ2+0MRgMX66jrb23u8nEBRODo7mzvIxlciUFtVsqX6n2xg6zbK5CpNBFBJHfD7
      331Gpi5TyKQxHZd2501Grx61YoZ4PIn55CI4psp5MkujUqJWL3B6nOA0W8G1DLrqV0ulXS2Q
      LzeppNJ0DYV0tvjsTuVYBomzMzTDRmvVqDwRgLA12oqJ0q6SOM9iWA7CtcimM5i2C7g06nUc
      V1DM9TJRyp02tivInp9QbnQQQlAoZFG6bTL5Cq7oLZhEKkenXqQumxSKxacTTzaTo1UvUWl+
      5brtVCucF3plKqk0GhbFQi+DI8Ihn06hWc/JRgjSmQy4Fmv3P+eLpU10XSNbeL2BrVHKPRO9
      2q6RKzfpFM8pdw1SmRSubSOrOq6p8OjLz1ja2H8S1KuHY6jkSwVWV7b5yS9/xXg0iKnKlMs1
      tvb2QG+SqnSQ20267cr3I4BcLgdA5WSbf/3dH8jUdGZmJqgWi9hC4LouQghcx2J7ZZ2BoSBb
      B2e0iiecFTpsbu+QTezTkC1SRxuUOr3oapZcp9TSqJXz6JaLo3fJFGs0KzkKiR1OyhpHexvI
      hoNwde4/XCN7tEG5o3KcKjIyECV+0AvVKBybTDaH1T5n56wOQpBKnaM0KlTqZXb2TgmFY4Q8
      Kv/jX35DTXUpnexTtwQI8AQHmBoNkC/WQBhsbu7huC6twhl7yQrJ4y06ukvmdJ+jrXWysksp
      vkdBFbxz7Rp2Lc5R8bm7v+SwsbaFzx8i6DH57H/8C5trS2wenBDPVgEJYbRY2T5+dko5dUyu
      rhCNxqgmNvm3PyyhO5DY3uQgfkhdNigmj2koXyW9dh0HYdRZ200BNltbexxsbmEK2FpbJzw+
      wdWZKQ621lBtQNALdVnPsbv2iM34OQfxdO/6uT0hCKBxvosRmSCoVznI9JyvT8tUqxVc10EI
      k+3dQ452eilh4/s72JKfGzcXOYkncC2VfMMhe3ZA6uSY2GCYbrtNqtIT91O7tBB+/u4f/5b9
      jVV0WyA3iqSLDaq1GoLeY5FpeRgaCPNS+rb/HCq5FB5/ABsPvkCY/NEauiW48d57BCSb5Xur
      fPyrn/PZ//V/oA3NMWk6zN38ECiw8sWnDMT8BAdHCAY8BMcnWVm7T9znQ5dbqE4AzC7R4XF8
      OMiaQdDvwe/zI+slooNDLPo8yKUMsmXjVS1OdjYpVqpAgMnFWwxHTZZXHjAxcxsp4LL55We0
      chM0W11i4QAEQihthXZrmGhsiP/5v/5vDIQ8KFMTbG8mmXt/gf39fSDEh7enePx4k3azxeef
      /oF8qcLc5csEoiOMRmDk6jyNoyM6isWNS9Ns7u9QCwYwDIursxMYPh+m2mJzYxul1eLhmkks
      EuLWJ3/HwkwM4/Pf0epqWFqHs0QW3TfM2MAA+dNdcuUGSu4Ro8ODRMOj/OM/vEc+ecD41Xly
      Xz5CtWxGRkfY3Uyz8MkVjnZWaNWrjIyNMHXtA4KYXJ0b48HjIywXZsajbGxsEpQcpPA4VxZU
      Nj77knqjw/j4MNfvfMwlfZ1aV8ZUK2wdNPn5J+9QScVZqw/Q0CU8QuLDGyEsr42wTR6ubvCr
      v/lrVn7//1KVBnFMm+FYBK/kYWQoynmuSHQSCiebvP83/4TUSHB/bR9tagTTsrB9I0SCfmqZ
      Y6ruOIujLsnDbfT2ZWypl5Bv9PIt/vfLtzjdWeHzlTgt3cEcGOJnP73z/VghbENhf2+PwOAk
      V+bniIaeD3wkKJ7HSZdbDE9f4ebVngFMaRbZPEzz0V/9lIHgq96SQrHI7MwMAO16FW90mFjo
      pYBKrk2x3GRqZox84pzRuStEA2++Bxhyg/WNA27/7K8ZDX/zveLpVEpvEQjs6Vgr2QSZmsEH
      H75L4K29UAJV0bDUJmfZKtdu32Eo/OaskACuqWJIYcJ+ifz5MVXFw53b158Eu3reUAhaq4YR
      GGQ44HJ8fIwUm+bGk6hub6LTKKOZLvl8kSs37jASkTjY3kSxYGr+OguzY6+OQrikTw/pGi74
      B3j35gLPxygTQrwwl7ahsr25TnT6OrcXZl6oy9La7OweYuPl6o07TI9Ev3Y+nvKj8QJ9+8X1
      3bWJJH2nqUOfa4Gvmvj2LfyxcyKEeLsxPfmz17et/899jf4c1+NHI4A+ff4c/EDeAvXp8/3Q
      F0CfC01fAH0uNH0B9LnQ9AXQ50LTF8APhKeJ8/7zEWiq9p3ERXIsnY78Te6gHxZ9AfxAUJsl
      jpL5Z/sCwnXIZ1J01G8Xwe5pYK3k1g6vi+lWPDmm8sSgd761Q8tU2ds9xP4T34ZXM8fcvf+Y
      liyzu3uMCySOtpD/ZE27xLd235j5Exwa9eZrjyRP9mhrLxr/8keHVJ/caGyz8/1YIfr0EMLl
      PJ1h8epVyrksG1tpri7MIFdqjA9IdA0bu6vSKuawBMwuLOC1Tbz+IJIls765w/Q7HzA/OYhp
      aHgcg1q9TaujIrc6jAClxDmhmTHKxSZjIYdyrcvYtEM+laLV6iA1ymRPN+h4Ilwf9SIGZrg6
      NYDWKpPvSrwzN0ExlWT48gK5xAnXbtxCordD2yqkEWNzhIWBK/kZn5hgbChMNtELZ6nKHSzH
      JZXKMBoSyOFLzAz2dqxzqSSaBYs33sErBPHjY/wBPzguwu8l6vGgeyQcN0ijlMHOThPVWoxO
      xKirHnDgyuwwmXyNucsz5JOndB0fXslh8eocDn5UucOQ45BIpnFdh3feuYYhy+DYZJIlJmdj
      fQF839SzCer1Jj4pxNzlWYI+H0fHa5z7QuTKbUYmZ1AqeYKxMcauXKV8uMvg4geMe3UaLR3t
      cI1qfpxG4QxiE3TrbSanZ4g+2Sp1nQ6nCZ3hkJdEqsrIUJTk4S6mbDE/7CWXbzMzd4XBkSiZ
      5AbdkM3c8DzJTJ5MqYtHr5OMH2Knq9TP90hmcize+pgbc2MEnCb/8mkCu57jvQ8/RKmkyU/M
      Phub3ytxuLtK4iTJtekop81dLs/O8qtf/ARHb7P5+IjhxXcYVjKsbRwyPDbE7LCfk3SR6elx
      Mqkcc4s3yecLXBlJc3AaZ3AihuHEGJ+9zNVLo1QLKRxbp1hu4LFkMtkSmfN9WtYwXrlATRMU
      M0Uio+O8s3iNyICf450dCokkC9cv9XeCv28c20JRFFwkwuEo5fM9zio2H71/nXAohGXoeP0B
      XBdi0TCOIbP2aJmmx8fC5WtcuzKJovbCNQrHwef34vUF8QgHbzCIJASaIuMI8AdCBP0eWs0y
      uUKXazcWMDUVjz+I1+5ycHDE6OLHLE5E6Mgy/mAYLAMbD7gOrhB4/UGikRB6u8zjlW2uf/wL
      tFaFqclJJMnLwEAUy7IJBAO4tomsqEiSp+cMlSQikRh+L2STcZIlhV/85DrrG4d8+NOfIDmC
      bHyD05LOX//ir4iGAlim+ez3icfjAcmDB0EgHCHg82CbJrpp4fNIHO6sUlQD3JoZwAyPcWls
      ECFc/H4fLl6i4RAIuxdU+Umf+gL4gWHoOoFgiP9EyxPw7YOTWZaB5PHj8/4RPyOFwHFdPB7v
      K+O07V6UvW87fCEEjuPi9b5a59fRF0CfC03/LVCfC01fAH0uNH0B9LnQ9AXQ50LTF0CfC01f
      AN8BSqtCS31dDCFBp1ZA/nPk43sJU5MpVWq4/Xd634oftgCEi2VZX2UHFIJKMUUyVXwr81b5
      fJ/jTI167oTE0S4rJ71gTNV0irNC6ZWsg+JJJLH41gqljk7yaJPdx0vkNQFCkDw9olxrYWpN
      tne3WVs+YH/1HmuHGfy+56bSrLOyecLGo8/ZSVbxP9lvd22DUrXO2toKCBfbtljb2Hh2muM4
      2M6rQav0ZoG90wwgKBfzJFOZVxa6pXeIn6ZeCRT1KgZrqztvPHq0skYXcGyDeuNpXCSLjbXN
      V2I2Pc/TUDYv48g51g++LomdYO3BA1RXsLW5hmm7CKPDwcERbeOruSiWCqQOVqgo9Obva+jk
      DtlLpNnZO3vh83YtR/w0i/Okn9n49g9XAN1OB9cxKeVKaJaBrOpYRod4PMnK51/QelLONnXk
      dpX7X96l1FQxlDaNcp67dx8QnrpC9vQYy7awTAPddMBocZBMs/HgS+qKTbvd5GDjMXtneVrl
      DOfFOguLlzk8OOmlh9J1bBe6pTPShQpf3l3BEg6GaaDrJv5AkInpS/jMNve/vEtNMUG4GIaN
      PxBievYST4NYSJKXSDiEruu4eptspY1uGOAYdGSDbrdBo/GihU1YKi1Fx7AsHEPh9OSEzft3
      qRg9wf7/7L1nk1znmaZ5nfS2vPdVKJgCCEOQHFIUJba6JXVHTEzsX+q/srEbGxuzG61pabqj
      RUkkfKFQ3ldlVXrv3cnjzX5IoOABkhp1axt1fUId87rzPu/JzPfG/aRPdvnu7jLJRJRGPkW8
      1pWNWZZGp9MVfantCve//ZZcQ6brqNZhb+0Bh4nS2flH9+5ynCqhKQqG3GB1dZ18qUS51uxe
      o6hYmsTKg285SVe7bbNMTk+iqI00v/3t/+SPDzeRxCbFTJw791dQTMA2UDUDsdWinD3hzqMN
      NNOk3WyRONpiZSvC0uURVjfjqKqCDZxGjqgUozx+cnw2DsFAEEPrPguxUWL98X22jtPIkohq
      WIit1lmAWoaKqusonSYrD+6QKLYAg/3dQ3Yf3iMrdcfF7Xb99QZANbpFrCYRS+XRKmkiiRJO
      pwe/x4U/4EGTW9y5u0azmODo6JhMPs/ucRy5lubJ5jHV/Cn7GY3LQzYrhxmc7qe2IS4vQa8D
      r9eHoausbzwhX6iwubFJz8gkzegmDfcEvWqO04J4ttPpCfbgFGx8bgemrmPZDkzL4NKNT2nE
      Dqm0qlRycTaP8yAImKbJ9dufk93fQDRNHt2/i9iusX34dFVy2qSiT1OgCjarT55QT0TpOD3Y
      apU/3dvkZHeN5Mkue5muM5vgdBHwuvAFvGhii931h+TUMKOOGo6JW/T7LQSha6lY7+g4bZVo
      IkcudoR/uI/jg259tqFRbOlkE4cUEkfcXzvm8pUFkok0stLGcPRw9eIsxdQp+Vq3btPUaZWT
      iI4+Mqdd8y1BcFDPnlJWXbixCIZCpA9XOU4VKSUPOC1K3bHQdfY3N8nlMsQP9sm1NU6Ptokk
      MsQON1FDi7hqB+QbGoIgEA6FsAQfLqdOfPM+8brGxuYGpmVjmirNmsjM5avkEqfEj3eotjWy
      J9tka1Xu3H2CYZiAgKW2yJdrbG7vAg5CQR9evwdDVVi+94i+2at/nTvBqtRma/khoitAb8BP
      S1L4+LOf0B/ofpYw5CbLj1bQBBeCy8PNm7folBKUFDchvYzZv4iveYo+eBUxd0hgZIGliQD5
      jouJga5fjC43ebK8Sv/8NcbCAruHUYZCLkR6uHFxlK2tfSYv3aCfDvSPE3Z399ebpRT70RxX
      b32KnI9wki4TGJzkxuI4xfgBVd8Fbs33kzzaJlls4g/1IItVFF3A5w1w9dbHaK0yDr1FvO5h
      djSA25ZYXj1keHwMDBXNdjPc60W23HhdHi4uTNCULUYGerr9V9tsbO3hdAiIkorP70ORNYam
      Fri6MEktcUBS9TMd0nm4fsLUzAxOU2Zm6TaDQchlCrTyEe7tFrh94zKKJGI73XgEG8HjRZMl
      ekZmuHZp7synp5aLcpRr0OsWCE8sMjPsY2dlHc0TQO+0CQ6OoDVLSI4ePr06S/xgi57LP2Wq
      x8Hx1go1q5cbFyc43Nlj9MIC6WiUxUtXiEeOWby0wMFxgsvXbzHaF+hWaFskI1scJat43F7G
      5y+zMOxhY2sH1QAcLnwuG9nycuPqBQ7Xl5HcYTxYOH193L55kWatjcOWiBdVvri91C3WkFlb
      Xqah2rjdrr/OAGhVcjRNH9OjAwAoUhvcQXzu5y8sRZHoSCpBrxPNsGh1FHqDbhqSTZ8fWqrA
      xOjgOzUlutSm3lHRVZm+4XGC3h8vjpXbdaqizvjoMM5X9DSGplJriQwNDOBwCFimRiZdYHRq
      CretkUzlGJ+dw+f6X/RCtk3KpRK6BQNDI/jcLxuJmYZMKpFneGr6dfOwP5Nmqwm6gmx7GR3q
      ezr+Fq2miKl10J1BBLWJM9iPITZxhwfoD/vfUppJs1LDGR4g9AYzNNu2aNSqSJKIwz/A2FAv
      rVaT3p5eAHRFpFhpMjI+gecFxy1Dl2k0ZfoHBv46A+Ccc/69+Kv9DnDOOf8enAfAOR805wFw
      zgfNeQCc80FzHgDnfNCcB8A5HzQ/OgAUWUI3LXRNeZqj6jmqIr9Rk2LqCspLCdpsFEl6KRGb
      JksYFkiS1E2C9kIxuiKhm91zb2uTZQOmTqvV4sVUVbIsvab9eRumrqJoryfmM3UVWdWxLP2p
      iZWNKol0fqShlW3btNtNdMPE0NU3Jq97F6Vy+Z3nLVMnn4wQzz33zTF15f31WAaS/D37ZBlI
      r/T/7Dn8GZi6Quxoj1Lrxxpt2W9th2loKKqKJGs/PgDq2Qj78RKFxAHp6suNPDnYpPHMkMiQ
      SKUyyAY0cxEiefGlaw9WN5CBXCZBudoiubtGRYP19SdEttYRX5iH2eNV8iKsr6++sU17W6uo
      RjdZ3e7GKsli4+zczvY6mvH9nkqneMpx9mWzJaNTJVco8GRjH1UqsrfXzXNWziVpvlEJCmBQ
      ziRpKRYdUXx9UbB0DrfWOEmVqeejRLPP22sZKtVq861ttLQ2x3tbHCerz45QKVVeWEws9lbu
      km7C5Gjf2dF29oBI4ZXMk7ZJIrLPaaqI2mlQKWdZ24m/te6XkKusHiReOnSwvYr8liFp1arE
      0xlUsU22VKJZKyEqry42Fg/+9A2qt5/BkO/7teNZV2wbqSNiWhYHGxvIb4h1sRLnKHLC2k78
      dV+g4ukaD/ZL3P7iK+ZHewCDcqnN8Eg/tmWimzZqLY1n7DKV5RX6Zrrb8/Gth2xnJb76m6/P
      yqqVsjiCQ4yODiMW07RUA9wy64/36agGvoHxbgPUGuur24xevkH/GzqVOXpCpBlkztt9ZSnN
      Ine+/QOae5CPxgR2Ew1mFpfOrj/c28TfH+T0MMncoB9c3VxRtqFw57vvMIPjfH17gTv3V/D3
      DnH79m2cepM733xD3QrwxfUZcFocba9Qbip4woNcnh5ACA7TY8UptcPYCNiWTiYZR226GO9f
      ZGt1g6Xbt9h7eIei7udXf/tTAr39VKIrrEVKBIemmfK0SFZNvv7131HZfoId6uUknmZ40cfJ
      ziqZI4u5pZvUsnFUw2ZgfIbri9OoWtdqpJGPc5hqcHNpElFSqRwfcHn2S5aXV/nJT75g5+Ej
      ZLdGuenhZ7eX2NxPYwP5VIr+yaln04Sj9XtEcgq/+Idf09hfIW/7KCWjTHxxCcN8NTmqjapq
      uJwOTFsjnxEZGxCoWUHGu0NLKbHHt2sp/tv/9vdnd5VySUJD0wQ8DixTw7AFTve3yMteJn7x
      Gb0ON6pY5WyZVpqUNB8jPR6uXbvMcbGBPTvOzqNvSbSc/OpXPyfy5A7ZpsDXv/wFAYfJyne/
      p2SEWZpwsZtS+XQxwMp+Hn//GCNmk4f3vsO2XHz16Ty//26ThWu3mO953jPnP/7jP/7j834a
      PHl4H48/jDM0SJ+jQ7KiMDXWw/KdexTKKZZXjxBrRXomFujE19lMtRAEg1QshtcnkM03URSZ
      6dkFtGaOWKaCoSmkUll6+kMkU2X6+0I4XW5GxsfRGzmK9TrZYh1VkWlV8zRlE1WHkNOib2IW
      o5kjVlaZ7HMSz5WIRaLMLi6SjEbQpAZN3YXT4UKwZEYn5ujvCdJsaUitAsmDdWJ1i1IiiqxJ
      5CsyaiNHR1WJpUqE/X56hobRqgnUngv83Vef4UPmMJohFArjsEQi0RK2VMHumSCo5bnz5ITF
      qx8xEFDZPyqhajI+h0Y2fkKqIpIrlHHpTaqixuOHDwiGe8ln8vQM9pHJ5Al5HfRPX2J0uIdW
      q4XcaNCq5qiaAYZ8GumywuhgGJfby/jEBCGvzePlHaZmJijnYpSrDXJFkeF+P/7eUaZGBylm
      4qimRbnRwe+0qaRSyIE+3K00B1mRYi7LzMI8Tl3k4CRFNp0l4HXQP32ZWbpweAAAIABJREFU
      0ZFe2s0GarNFs1YEf5iOZDM74mEvWmJkMMDv//l/UCnmOErnOY0kUKUqdnCM4ZCLyPEJueQJ
      Td2F26FTbcjMzc/RyJ5ylCjQbtSI7j5mK9GkWaugSG2UZpHVwxTteoXBiVm0epqqEWLEb3Hv
      3gMsl59qOkKpJZNIpPEgU2x0SKcLhHwCg9MXccp5Hm/E8DqdhPq8VFMZJE+IZiFPz0A/mXiC
      4ek56tko5Wodw+GnkElgaiqhgUE6kv2yFOJ4cwNhaIbRsItAuAdbqfNk84jesJem7GI47ER3
      uXEqCv0zF/HaCm5fAFOTEZweTNPC6xLQbSc9oQBg0Wm3MSxweX0EvS6ajQa200NvTwiHIGBo
      Ms12B48vgKnKWELXhMkb7MWNicvrw1QlDMGN1wWNRrO7YAgCTkHAtCwEh5NwTy+2oeL2+nEI
      gG0jd2pEj6O4B2cY6fVh2RYetwscLixVRrdsfIEQQb+XTiXFw40I/mCQ67c/w6mJGLYDU5UR
      3C4EwUVfXw9Su4kpeOgNBwGbTrsBrgC23sGwnWCZuNxuLBw4LA3D6qYR9fm8qKqKx+PBsKCv
      N3ymU1KlNu2nHqAOpxPbMnF5/PSEgk89bmyquSRPNrfw945z+coSYY+FakBffy9OQcDQFDqy
      isfjJXawzmFW5GdffoLT4cRlSCSyFRauXqfHA81GA8HlxjShr++FdsgiHcWktzeErlv4XDoP
      7q/gD4fQbR+XLkx31bG2RalcYmx6gZDXidRusf3oGwqOKX5yc5FgMEwo6APLpN1qksjkmJyY
      xIGF7fTgdVjImonTAYLTQ284hFhJsX1SIOi2MLy9zE8M43C6wDJxe72YFrgEAxsnpiUQ8pg8
      Xtvj2scfI1gWleQBmyclvvzqC3oCXUOxZy8Wp9OJLThxCSYutxdV1ejpDaPr58ZY//mwbQzT
      xOl0/buba/2H8Wf0+TwAzvmgOd8HOOeD5jwAzvmgOQ+Acz5ozgPgnA+a8wA454PmPADO+U/F
      D/1R870B0C7laGmvbo0/r8yy3nzu2XnTNF9rlFQr0XlF/mHpCrlS5a1lFfJZDF0lX66+3klD
      JFtsYtsWpmlho5HNPBeKKe0qhUobQ+1QLOTIFurYmkgyVwFTJZuvYJsquVKVV3lmlvXmvr29
      72BTL5V5XVL3bjLZ7Nm/W7UyzWaVbPFN6e6+H9ls5qW/a6UCkm5iWRaFbPYHte9ZAj7L0MgV
      Sq+V3axWSGZzvGsOPn9GPxxdbhOJJt4g1QDbNIjurXFv7fAHlfneAGhk49TUtzVXpVxqvXTE
      VDuk0lkk1cDWJVKxFMort7c1FbH68mSzNIl4pvDSMbFZRXoafKlkjGx0h/t3l8k3FTB1ctk0
      lXobS2sQTdXolDM83tzHRCEWfT6RPF4P+3s7yFKTTCpONFlG8PhJ7W/S0RRiiRyKIiN3Oqiq
      Qi5XwLBssFXWH97n3v2HtFSbfD6H1KgTz+Vpl3M82twF26JWzNF+Rf1lmRai2EQUn+U3tKkW
      c7Tfo7KMxmKgieQqLeqlLLVanljmTVkQbWqlPK2nJk/YFh1RwjQ1cun0WXbJWCyKItYp19vY
      NhTTKTqqRrVYIRGN80bNmm2RT5ywH4mjP5tsSoN2R0cxwTZUYukMsVj0pdtq2ShbG+sUxLeH
      lSY2SWbyvHHpsDSy6QzNjoJtQ7OWJZt/LhDstBpUs1GOMnVMTSabK2EYGvlCmWr2iNO6h599
      uoTUqpLNl563/R18749ASqtMvaODKXP/j9/wcP0AC5l8roFSjnGUbVEtF9FNG8tQWP7jv7KR
      qNGUmnheKEduVvGEhrF0ldONLRpYlAqll1YEqZzkMFmmXS/TljQ2trYACPQOEaRJvi5jWyqR
      /T1Wllcot7tq1EgsilbNUn8659rFJNFsFYcnxHyvTazUfmF1cvLx9Sk2dhNYto3b7aWnt4da
      YovD42OO0jVAoFEtYLmCeJwgCAJer4NQsJdE7IROrkClXWXzKM6TtXVepFkqMTw1iSh22N3c
      QterrG0csbGxz3OBok21mEdVO2TyRXY2Dp6eExDelKrI1CjVuhPClqus7UVZX988m0yHW+uI
      moltGxw++Y5vl/cxsdlZW2Nlc7Mb1E/rLeWLZ/ftbWyiPB0YTWpQazXZ2j4kdXpIQzaolXJ0
      HAECPhfR3W30Vxa0fD6Pbdv0Dg7hNCSK1TZ729sYgFzPU+1oFAslYrubKL5+mvUSTmBj4/mY
      teslOpqFbRkcrd3jm8e7OAQfvf0BDje2UYDY4R6tVo1CvUPseJdUbI87959wtL1C0TXHpUGN
      /WjX/lIVq/z+d/9MrPh8gbZ0hUKlRqOUoZg+5STffHOWSK1Tp2V4MKQ2Tq8fhwPMVp2TeodL
      EyFsXcZpS3z3zSNGL/0El7vBo3/9hrBHo2dknN5gAF0QaGXjyLaLGwLsrj5m8qNP0PJRvtvP
      E3Q58LoMjr6p0CyXGR0dZni2q+h0O2yqLYkeb5N7f/gTozPTzIR97BymcPVOcWE8TDUToW/+
      Jl8vjiNYHfbX75PTVHTbZv/hMtlSC1ntZen2l4CJZhpsruzy67//gmyxu+41RJ340TaDQyPc
      u5elWFUI+QWwXfh9btRGEdf4EgNCk5VH35JOlRjuD9JQIeiyUXWTjZUNOpJG//gsAA/u3+fL
      r74ivv+YlBbEgYVD7ZAt5JE1jYBnHMFUefh4m8+//Iyj9QfUhTAef4ipqVnGrBp/+NNdyqLK
      UF8vn3x8Ab/khk6au0cGX9+e43f//X/H3ztOR1EYGJtDAA63HlNtVCjcfUR/T4CeiSt8ujjD
      5kaHudF+Du5sotsWw4Nhth8/whUcodfvRwAmRwPc++N3eD1O5EaFjiNA0Gkjmzb768u0G1Xc
      viC6YWFrMrlKhcGpRSyhu9LnklGcHi9ufx9j4zNcGO/l4PiUfys1cOkNNNuDYNm4BQ073yDQ
      NwjAgNfmj999h9vhoFrK4esZpa8ngK7b2FqJu98eYPj76QkPcBG49fNfY2kiD+6vERGbCB4P
      MxdnSG+fsvLgLhdGvFSqWWpDg/j8Xj75+a8Y6w9Sz0TIqj1cGhb40+//SF9PELcvQEc6+SFS
      CJt8dI9IQWZuYYHpsSEcAqidKqur+1z97CcIUh1v3yABt0m5JDE88oIOvZzmIFnC7fRy5doS
      AU/X6EiRWqTzNRbmZ3E6BHS5zur6EeMTQ6TzDW5dnaFYM5m7MMGLFk6mKrK5sUlHc7D08W1G
      el43V2pUC3jCIwQ8P+67vm1qHGxvUm4rzF25xdxo73vvyUb3yTUUPP5+rl9dePMr1rZIHO9R
      6RgEeoa4vDiD830aFktjb3sX2+HCFR5kaWHqPTc8rcq2iR1uITp6uX55HsdbxTIGhVyNkYmR
      H/zLiGWo5PIlEBwMjo5Sju2TVwP8lxsX35/sTpfINTQmhvveeNq2LAqlEuNjY288X0wecZSs
      8fHnX9DjfXPLDaXF9u4xgtPJ5PxlRvuDzwr/87VAtm1h28L3zi74/vKeO0EjCAgfjKLrL8PZ
      eArCD868+CNrxLK6ibT/PZ7ds/792LrOxXDnfNCc7wOc80FzHgDnfNCcB8A5HzTnAXDOB815
      AJzzQXMeAADYyB2R77Fz/h+LbaFqb/MgOufH8BcNgEYhRbr0ZnMnuZblNJNlf+/kR5dfjOxS
      VuFwf+ds8h7v7vM+TzNNqXAc6WYuNDWJjccP2DyIYaKxv3vA8c7RmzUy76BVSpEstKiXcogv
      ZDe0bZu9vS0O9w7emGUxdbJDU4ViNs1bNIdnGEqLvcNTTMtGqqaIvqCT+TG0Gw1MQC2fECkq
      QJu9ncQ776mlTsg1lXde8zbKqSMKrXeP7N7ezmvH0k/HaHd/90fV+yY65Tgn6dxfNgA0uUNH
      1hGrWR6v7aJpKqv3v+Ff/u0OLUmiJXWo159pNWwMw+hqgmyL5NE2dx89of3MNcy2MF6xYJSb
      dRQTGvUq8aMtdk/SNOp1LMvgaOsJj55s0r3dRtd1NKVJMlXENFSajRZ7GyuU6iJV0eTmzat4
      HBb1ep1mvXGmkzEM42yzpZGPsbp9jGHZmIaBYUhEj6O0JRVZFhFlndjpEaKiEzvY4DjZ1aXU
      61Ua9Qa2bWPoOnKjSDRRQNF1Oq06ugmRo11UTWVzZZlCQ8I2DTYf3+M3/+f/Qfap8V4uuk8x
      kyJRkzCVDq1Oh+31J9RFlVox183KCFiGzObKI1a3jl9Se9q2hSR1MCybXGyf3UgcUZTROg1a
      igEY1OsipmFgWjaWabymvNTEJqVihuWVDSTtaYW2+dqzkep57t+9y2m2QmRnnVxNRBbrZFMx
      VlZ3UBWR6EkKSW2zurxMTTbOxipxuEWi8HzhFFt1NBOq5SKHW6ucpJ8pfbvj+eJOlm2ZSB0J
      07JIR3ZZ3z6kLcmYloVtW2RO99ncj6HLIq2O9JcJgI7YeuoXamGYFkc7W7iNBitHGUzceN3d
      nLjYz3fv6vU6YkukVSujqC2O022W5sfRNB1dlRDFFi1RolypItcz7EdLmKaGphuIlQJmcIxq
      6hhFM9FaBdKim/nxITSj+z7YXl1BFQLotSgn+SZGq0BBcRA5SfA3P7nBgwcrmJaJedYmm3az
      TqvZRpbaNESF7a1DbLlKUVRIR7ZJVQ0uXF6gerhCum1iWSaBQD9hb4fDpEh+f4WyqGC90M+t
      J48w/MNcmB1h5cEjDNvGskxCA+PYpUNqhDg6PARsNE3FIdiomsb25g7Dc1dxKmVktTvZTKlA
      sdhmL5KkUSmi6Dqbm1s0czEk3zBjgwEM3SQTPaClQaea4l9++zsebUYYm7vCdJ+Tb//4J6ri
      83emZZmkdjfJNCXqmQibx11nOdsU2dw+xrQ00vkmoz6VWLHZXeQ6Iq22RLlap1VKEElVOd0/
      ZOLSFVyWSDpfJLIfQZc7lFomA84qsZpCS5Spx45w9obYfiZj1iWixTanh9tUUickSy10TcM0
      DRr5DMHxeU4Pd8ieHlBoSmw/foRo2iSPD5FMaBVP+e1vf8eT/QSTF64w4Onwm3/6Vyq1Kkc7
      m5TNEGr2mOrT1+1fZCf4cOsxvbM3sEsHPD4uMTE6hK6Z9Ic91DsaHgwU28n1m9dplhssLIxz
      984jfvqzn7L6h9/R8vdhtNsMjM1y7doVzHqCZCvAtekgv/3XbxgYGMRyOBEEcNggyTKBYJjx
      2UWGXB32T9O02hJjs4tcu3IBrxOePHrE0Eg/mXyDix9dwhAt2oVdHuyVWbo4hSA4EASTiQsf
      4ZJEJhdn2H34gLlPvkSMrfHkpMHkWD+a5eKzTz/GbUkcH0XQLAGnr5dLs4PsbGwhqgYOl5uA
      34Pl8OHQRIbml3BILWYW5pGbJY6jaQRBoGdkmiGPzPZxAl0zcHn9eDEYml9icXIIAEOq8Xht
      G1k1cXs8BHqHuXX9MpZYpqK6KOw9YDuvMTc+gBMB3bJwOwTass7c4hWuLM5QSx8SK2mEPBbF
      psrCWIhMRWRqeo7JiVGEdo6CPcLMgIvD9SeUFReffnYbn8PgeH+XYq0Ngo1lOTANGZw+wn1D
      3LhxlXb6kKpjhMUBi//x+/sM9/dhOV3YuoLpDHHl6hJKbpfvNrMsTA/icPtwCxamJWALAl6v
      F8E2mLp0m9mRENFoBJfW5F/ubHP18hym4ELAxiEISJJEIBDENLSurMPlpmdwitsfXSB/ukO6
      aRNwGlQ6JjP9HooNlYmZGSqpCB3Lgd4RcfqCYGjgC3Hrxl8oTaoutzg4jCD4+1m6vID7e+iE
      mqUMmXKTYP8YcxODL52zLYNkLIqkmozPLaKLZXAEGBl+k5Po6+Rih6i+EeYmnmeNlJpF9o4y
      XPv4Y4JvEcupYp1YOo/gCrC4OIfrP0iWpEhtcsU6s7PTL2WglGpZdmNVrt+4RsDjRKrXKUgy
      C5MTr5VRrRbRNAfj48PvrswyyGVS+AYmGQh5AWhU8nj7xvG/QTtsWzrx0yiKYTM1v4hUz+Py
      9TH0NKWrJddZ2Y5y5foN+oOe1wt4BUMV2dnaY3rpFn0uhZbhZfBVoaOlk0mnCQ2Oo0giYyPd
      PtWqWVQtwPj495sXcK4FOucD5/xn0HM+aM4D4JwPmvMAOOeD5jwAzvmgOQ+Acz5ozgPgnA+a
      8wD4/zHvyxIJoLQrpPJv8hX6a8emXkhTbv043dH35UcHQPJglYNUlXRkg2jx5ayDexuPqD6z
      frM0GvUmugm15A47qRfFcTYbdx/Q4XmWyJMn9ygocP/+HXaW79N8QTuV2L5Lqgn37999Y5vW
      lu8i62ApDVYePiTbeJ69cuXxfRT9+8k9W5l9tuMvTy6jUyURP+X+6gGymGF1LQbYZE73iBfe
      Jkoz6TTrKEZX1vBqmlbb1Fl/fI9kvk45dcBB4rlZ2PuyRNqGTCZ6TKr0LOvmq1kibY7X73N/
      I8bwC44LjcQGu+nWK4VZ1MpFqg2xmyWymOTeyvFb636JTpG7G5GXDm08vkvnLYrEZ1kiDVWl
      KYpvzRK58t2/cZgT6Qt6v187nnXFfjbWJhsPH7zmQAjQLByztbvHvZXjN/sCvYxBrdphYPC5
      JYjUKNI3c4XjJzssTXV36XKRTbZTHb762Rdn17UbVRweH7qh065WkHQTnN0skZrgoX/kqdWF
      3uZo/4iRizd4U3dLiT2OKw4mXd2I1eU6D+9+C6EJLo8IbEdyTCw8zxJ5cnSIy2exvRFh8m9v
      Pi/I0nhy/yFmeIrPr06yvPwEfL3cvv0JLrPF43v3qOpePrk8Co5ulsiaZDEwMs7kYJjQ4CSe
      1GMacuDpYFvkU3GMkTBzo2EO9w65eHWJyMYyRT3I11/ewDQMiieb7J7m6R2dZcrfIVGx+Orr
      n1A+2MR0edjYP+Gri0FSkR3ypyYXr10nFz9F8PhpyRPMTz23BJHqRU5zbS7PBMmUa2TaO8z8
      6nO2tva4desmx5tb6C6NYtvN9elRSoaC1yVQL5cJDg6dlRM/WCOSU/n53/6U+uEGKcUmV9H4
      rz+//tJu8+tolIod+sMCouWj/+ml9XyUh9tp/u6XPz+7slkr4+sZxOt6ts5aZOPH5GUf40OD
      GIaJx+HkrDq1TVX3MhhyMzY2SsXy4XTAydYy8ZaLX3z1KfHdx6QbDr762ed4BYvdJw8o6EGW
      xpzspjVuzXp5vJehZ2iCXr3D2vJ9bEeALz+e5U931rhw41NGX5j1L2eJxEZRNGzLxMaBIdXJ
      11WG+gMc7h4gSyWW12MY9QQMXcZZ2GMzWSMQ7iF5sEco7CRRVBG0NsOTs4jFU/Jtgf6wj2Tk
      EMHnoS4KzI73ITYaOAN92O0ytssiEs2hWwJmu4ju7aVdbxB0Qd/ELGo1RbJqMBIwaBouEgeH
      LN2+zenxEU69jeruA9PAMiRGJ+bwuSxyxSamqdFK7pDRQ1STJ7i9LqLZJnLxFMHvJ56tMxTy
      4e3tx2xmqTHAl5/ewGtJpKoKU2PDKI08+/E6vdSoCINM+UXur0UYnVlkOCRzEJNQpSrDA33k
      Tnap6A5isQwetURL6GF7fZXxsSGSsRTDU5MkTxP0+y08w4sMhh1kckUM1cZrNylpYWb7LbIN
      B/PjvTQaTQJ9wwyEYHl5j8mpMZKRbfLFMlXFx+J4D5LtZX5qlPhphHBvH6lECs1QkcsVgvOX
      8DdOOK67KcaOGZmZQZDrpKoSmWiUPp+Fc3iR4R4X2WwOQ7NxGQ1qmhNFEZgd8xNN1xjo8/KH
      f/09ervEQaZE5DCNjwZVq4fRkIPTZIFOKUqmbjI60kepWGJyZp786Ra5NrgwyB0+Zrtg0Cxk
      aLRahDwyO/EGci2Dp28SOmWahpc+r8XewTEDo5MUozt08HK8f0yAFmXVRSKaZMBn4h25gNeo
      cvfRHmGngOY0kMo17L5+KqkUg5PTlJIxJi5dp5k+ot2qITn7iZ8e0eN3Ybn9KKrwqhTCpF5r
      4/U4EDwBBLnC2kGaieEg0XiJYMCJ4PEgGAKLS1eoFzIEB0bR2hUcvjCaqtPrc9CxvMxMjiDY
      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
      hR40AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 15 Positive Tweet' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Vaccinations among Countries' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dWXBc13nnf+cuvaCx7ws3cBdJUZRIiRJlyZasxLvsiexknEkllRpXzVRm
      nudlXlw1b1M1D1MzD/OSTCWZOKs9IyuWlUixLYmyFooUVwBcABB7A40GGr3f7Zx5uA0QsCQS
      FAE0xT6/qlvdfe5yzu3+/t/5ztLnCqWUQqOpUYxqF0CjqSZaAJqapqoCUEoRBEE1i6Cpcape
      A+gmiKaaVF0AGk010QLQ1DRaAJqaRgtAU9NoAWhqGi0ATU2jBaCpabQANDWNdS8nKyUZ/Ohd
      ZjNF+g6cID9yliUV49DDR5kaOEfaMThx8knO/vJnPPHb30HOXeadYfjGFx/eqPJrNPfEPQkA
      BA89+hTds6MsemXKMs6u/l20GlmSPQ/zdH2ByUyWxsYE6flFyrNZmhrbUEohpQRASonv+/d+
      JxrNZ+CeBCCA6bFhvGgLu7e10BwVLKbnuZ4poer7WZ7l0NjaTiEzgzITxETlXCFWpkEIIe6l
      GBrNZ+aeQ6BrV68gYi24zj4Kc6MsFjz2Hz3O/LVzvOtYPPHEEyy4LfjpCezdx8in0gghVgSg
      lMI0zY26H43mrhDV/EPM8mxQy7rHSEyj+YzoXiBNTaMFoKlptAA0NY0WgKam0QLQ1DRaAJqa
      RgtAU9NoAWhqGi0ATU2jBaCpabQANDWNFoCmptEC0NQ0WgCamkYLQFPTaAFoahotAE1NowWg
      qWm0ADQ1jRaApqbRAtDUNFoAmppGC0BT02gBaGoaLQBNTaMFoKlp7k0ASpFfmGVw8DplX5Jb
      SHJ9ZJJAwVJqiuGxGQKlmJ4M0zwnx/TswgYVXaO5d+5tcVwU6UyWlkbF0OAwbjlHW71gdEyS
      ml2gORYwnUhw7fx7WI0v4k9d5ux8A71drRtVfo3mnri35dGFQW9vD6Mjo/R2dLFYjrO9o4nh
      q2dp6H2U3YkcowWHjs4uFtLzuEVFV6OFUmrlmQBBEKw8K0Cj2WrueXn0kZGbbN/zEDGKjA2k
      yNlFRH0v+VSStOMTbehDNLTgpa9Coh/DLSOEwLZtlFIIIfTq0Jqqcc+W5+TTnHnvHfr2HGFP
      V5zhlMdjRw+wMHGNiVyMR3Y3kYsoglIz0fZOitnCRpRbo9kQ9PMBNDWN7gbV1DRaAJqaRgtA
      U9NoAWhqGi0ATU2jBaCpabQANDWNFoCmptEC0NQ0WgCamkYLQFPTaAFoahotAE1NowWgqWm0
      ADQ1jRaApqbRAtDUNFoAmppGC0BT02gBaGqadQhA4ToOi6kkBTfY/BJpNFvIOpZjWODlH71O
      LkjS0PUM3/vW8c0vlUazRaxDAA1ErAJHjp7EEW2bXyKNZgtZVwgkDIOrAzewI7rJoHmwWEcN
      4GLU7+B3v/oFTFMvYKV5sFiHSzdQhRl+/OOfcOH6zOaXSKPZQtYhgCiWHRC4JYjG1u5SiqnR
      Qc4PjKJQDHx4ml+9dZrZTIGr59/nzXfOUHB83nvzFxQDRT41zNsfXtucO9FoPgPriGmyLDmd
      /M43d/Hqe2Mc392+Zm9bdx/Z0RQoB9do4eTJfUT9BSbj2znW4TCzsIQMysynczhTSXzRxurl
      SJVSVHF5Uk2NcwcBSPL5CDs6S/zNT8/w/Dd/Z+1uIYjF4wgBKItE1OPcB+/R0daIXbeDSCTA
      dyQt7e1kF2ZRIkZDJccgCMcUpJQrzwrQaLaaOwjAY2ZqnOxSQEN9jIV0hv7O+pW9SkkGzr3L
      lRtzSNvCLRRwXA+zsZvCjY94yzN47OSTLOQbCOZvENn9OE5qfuWZAMueX68OrakW61gevcDw
      jRx7dtczPJpnz57uDctcL4+uqTZ3sDyHN1/5e3725iSHD7fTdfAF9uzZmoJpNFvBHXqBIpz6
      yrc5trcD226graVua0ql0WwRdxCAwI74LC2U6O5uZ2EutzWl0mi2iHWMA7Tyxa8/TSY1TUtH
      w+aXSKPZQtYhAAHSp2PbXlrrI5tfIo1mC1mHAJa4eHGG7du309IY3/wSaTRbyDoEYJNfvMnp
      06e5MZne/BJpNFvIHQRQ4sJHV2ltacXzPIJAP9Fd82Bxh4EwhZQ+6fklmhpj5EqCtpbEhmWu
      B8I01eaO3aCGkeVXvziPJVP88u3BrSmVRrNFrKsbdHt7nh/9+F1OPH1480uk0Wwh6xBADtfc
      ye9/73kmrk1sfok0mi1kHQKoJ8gN8qd//grtOzduIpxGcz+wDgEUGTw/RCm/xPXR2c0vkUaz
      hayj+0XS3NlHSRQpLOi5QJoHi9t2gxZzKSams2zbuYPAKVDX0IRliA3LXHeDaqrNbS3PMm1y
      8xO8dvEs0rB46NGnObK7a6vKptFsOrdtA5h2jO7ePurjNuVCjlyhvFXl0mi2hNvWAKXcPKPj
      8zzy9At0tTSwccGPRnN/cNs2gKqs2LB8gGFaWObGLY+o2wCaanNby8ulx/jHn72JW/m8/7Hn
      OHV05xYUS6PZGtaxKoRi4MO3GUlm2XHwBEf36lUhNA8O64hn5vnla2eI2QZzqcLml0ij2ULW
      IYBmTj53nPnZCSJRc/NLpNFsIXcQgCSXGSc5H+GFr3wJJ6NHgjUPFncIvn0Gzp7l7LkpHH8H
      R5788taUSqPZIu64MNbJL7/Ec09sI5srYNv22t1KkZmb4OrIFEopZkaHePfMBcqBZPL6Zd4/
      dwXXl1z+6ByuVJSyM1wcGt+8u9Fo7pJ1tAEyzCw18ocvPc2Z9z7+j7DAsAjKJaSTYzoHB3c0
      cvP6ENOlOvpbLKbSSyzOT5JaLDF7c4TZJd2Q1tw/3DYEUlKiaKanOcdf/79f8/iXv732ACFo
      a28nlSoi/YBEYz2JRCNq6iPqOo7RVJdjoejT2t5OZnGeIDBpjgmUUitLogdBgJT6z/aa6nBb
      ASRvXCJt9fDs17/7ifuVUsxO3mR6eprmtgayyUkG09DYdYDk2CCXLOjdd4RcoQUvNYjV/Qhu
      NoMQAtu2UUqtLJWu0VSD2w6ETV56m797/RKdnY0A7Dv2LCeP7FjZr5RiITVDyZXUNbZSZ3gs
      lSQd7S2U84vkXUF7axOe46B8DzNeh+d61MVjK+frgTBNNbmtANLjN1iy2tjd27IpmWsBaKrN
      OqZCbB5aAJpqoy1PU5MEMmAgeUkLQFN7FN0Cf/fRX/H2yC91CKSpLaYyE/yvX/8Pim6Bf/vk
      v9cC0NQGSimupYb4n2/9N3a29vODp/6E5niLDoE0Dz5SSX49+jZ/eeZPObnzFL9//I+I2eGz
      LrQANA8sCkW2tMRPLv4tp0fe5DsPf5dvHP4Ohrg1A0iHQJoHEqUU56fO8qOzf44XePy7U/+R
      g12HEWLt0g7a8jQPHEW3wM+uvMw/X32V5/a9wLePfJdEtP4Tj9U1gOaBwQ98zk5+wMuX/p5A
      Bvzgqf/A3vb9H/P6q9GWp/lco1B4gcdg8jI/vvA3zOaSPLvnOb5x+Ds0x+88hUfXAJrPLQrF
      8Px1/vrsXzC2MMqp/mf42qFv0d3Qe1uvvxotAM3nEj/w+cX1f+LHF/6WIz2P8K+Ofo/epm1r
      enjWg7Y8zeeO+XyKvzr7vxlIXuZ3H/0Dnt/3W+v2+L+JrgE0nyvOTZzhLz/8MxKRBD946k/Y
      2dL/mY0fdA2g+ZwwX0jxkwt/y/tjv+aF/V/lpUd+j4gVvefr6hpAc19T9kq8OfwLXrn8E+qj
      Dfzh4z/goU8Y0PqsaMvT3He4vstiaYH3x97hjauvoVC8eOQlnt3zHFErtmHGD1oAmvsEL/C4
      MX+NjyY/ZHD2CpOZcTrqO/naoRd5atcXaIo1b6jhL6NDIE1V8QKPM+Pv8dPLP2ahmKavaTuP
      bTvB4Z6j9Db2rcza3Cy05Wmqgi99Lk5/xD9e/r9MLU3wxb0v8OX9v01nffemePpPQ9cAmi1F
      KsnI/A3+4cKPuJG6xuM7n+LbR16iq6FnSw1/GS0AzZYQyICxhVFeHXyZjyY/5FjfCV565Pfo
      aepDVPHpc1oAmk1DKUXOyXJh6hynR37F9dRV9nUc4MWHv8vBzkOYRvWfN6EFoNlQlFIslTMM
      JC/z7ujbXEleoiHWyNHeYzy/77fZ2dp/1/N1NhMtAM2GMZoe4bXBV7icvIhSkmN9x3ly19Ps
      ad9PnV1XlRj/TmygACQfvvkGOVHHoYcfZvzyORYdwYknn+LMGz/lya+9RDB7kdPDghefewTQ
      AnhQKHtlXr/6c1658hN2tfTzwoGvcrjnKHV24r40+tVsnOVJh1IQoWfHNlpEjuS2o3whUWAi
      k6O1rZn0/CLlVIG25jaUUkgpV16Xl0rXfP6YWprgLz78U2aWpvj+o3/EqV3PrMT2QRBUuXR3
      ZsNqAKUClhYzZBfmyBbyeIkd7E2USaoEweIEvjJRAThEOH70AMvZBkGAaVa/MaS5O9zA5fWh
      V/nZwMvs6zjAvznxx3TWd1W7WHfNhtUAyvcYH7nGQsHj4NHHmL9xnjMzFo+fOM6iV8BfmCLS
      /zD51AJCCIQQK88HMIz7p1GkuT2+9Lkyc5F/uPDXZEqLfO/R3+e5fb91XzVs7wbdCNasC6kk
      g8krvHLlJ1ybG+SJnaf47rHv01bXft/H+bdDC0Dzqbi+Q7qY5kbqKm9ce42pzCTHtz/Biw+/
      RG+VB7A2Ci0AzceYzc3w69HTnJ14n+mlKWJ2jCd2PMWX93+Fvubtn9tw55PQAtCsUHKLvDb0
      j7w68FPa6zt4fPuTnNhxkq6GbiJm9HMd6nwa2vI0KKUYTl/n/5z5M9LFNH9w4o95uv9ZLNO+
      88mfc3QNUMMopSh6RV4deJnXr/6coz3H+P7xP6K1ru2B9PafhBZADaKUYrG0wDsjb/HGtdcw
      hMF3H/nXPLXrCxj3wQS1rURbXg2gUKDAlx7XU9d4e/iXXJz+CNMw+crBb/LMni/REGt8IHp1
      7hZdAzygKKUouAVG0jcYmr3MRGac4fnrBDJgX8cBntn9JY5vf6Im4vzboQXwAJIuzPPa4Cuc
      nfiAxdIiu9v2sLOln/62PRzoPER7fccD1ZV5L2gBPCAopUjmZnh14Ke8O/o2vU19PLvneU7u
      PEUiWo9A1EzD9m7QAngASOXneG3wFU6P/Iqexm18/dCLHNt2nIgZqXbR7nu0AD6nSCVJ5Wf5
      l6v/xFsjv6Q90cGLD7/Eo33HsUy7Jhu0nwUtgM8ZBSfP1dQgZ8be5cOJ9+lu7OWrB7/F4zue
      JGJpj78ulAIVQOBqAdzPKKVwA5dkdprLMxcZmL3M+MIoju+wv/MgX97/FQ51H3lgpyncNcum
      rCSgQPrgZKG0AMX5yms6TJN+OB1fC+D+QyrJ+OJN3rv5Du/efJtcOUdPYy/7Ow+yv/MhDncf
      pTHWWO1ibj1KgV8GrwBeEdx85XMJ/FKYtrw5OShnwLDAroNIPcSaSXlxhtMSR1pcS5a0AO4n
      pJJcmr7A61dfZWD2Mj2NvTy397c43PMwbYmO2mrUSj804OJ86LWLqfC9kwuNPXDBjIbGbcfB
      ilXeJyCSgGgT1LWCnUBZMaYXXV59f5h3Lk9QKHk0JqI01kW0AKqNUopseYnLMxf42cDLpPJz
      HOs7ztcOfYv+1j0PRmijFEiv4q3L4ObAWQpDEScXpgceBBVv7uZDIzfs0LjtOqjrgLp2SHRC
      XRvEWuAOg3iO5zM0Ns/P37/BuWsz7Olr5ZtP7eOJh/qwrXDKhxZAFZAyYCY7zbXUEJdmLnA9
      NYTjlXl27/M8v+8r9DSu/yFv9wVrDLwSirgFcLNQXoTiQmjsy6GLGYFIA0QbQuO24mGaFQu3
      SH24z4qH3tyKwV0M3GULDh8MTfFPHwwzMbfEo/u6+cZT+zmwvW3F8JfRAthklhuymdIi11ND
      DCQvcyV5kaJbpCHawL6Ogxzf/jiHuo+SiNyvy4gokEHFSzthaFKYh8IslObD9345NNLVm10H
      8RaIt4beO94abssGLQxAwF3cs1KKsutTdn08XyKlIl9ymZzPcmNygWsTaSZSWZrrYzx9ZDsv
      nNhNZ3MCw/jkPLQANgGlFPOFFCPpGwwkL3MjdZXp7CQt8Vb62/ZypOco/W176Wvqw75f4nql
      Kh56VYPSyYbGXs5AeSkMTdxc2LCMNYdhSF07JDog2hjG5Fb0licX5l0Z9ychpSKdLTI+m2Vk
      ZpHrk2mSC3kWs2VyJQelIGqbtDfV0dPWwL5trRzc0c6evhYa6u78CCUtgA1koZDm3Zun+WD8
      1ySzMxiGwd62fRzqPsqh7iN01HcRt+PV8fLLfd8yCL14abHSNZiGQqWB6ZeXDwbELQ++bOzx
      1krDsj6Mvw37Mxu4lAo/kPhSEgQK1/NZzJdJLxVJLhSYSeeYSedILuQpOT4K6GpJsH9bG/09
      zfR1NNLWVIdlGpiGIGqbRG3rUz39p6EFsIH89zf/K8nsDI/0PcaxvuPsat1NzI5tXQGUrHjp
      QujF3Xylobl6Wwr3W3GI1kOk8ZYXj7eG8bdVaXhu0H8DlArDlFSmyFQqy2gyw8RclvRSkUy+
      TK7k4geSuqhNIm7TlIjR0VRHT3sDvW319LQ1sLOribpYZF16U1LiuUWks4hBCaEKSCeF9DIo
      6aNkAEhQUgtgI8k7eSzDJGrHNm4qwpqfR1U8uQzDleXwZHmgp5AK0wMv9PZ2HCJNYYMy1gyx
      prVxuBW7Jy++jOP5jExnyBYd8kWHfMllqeCwkC2RzpbI5MsUyx7FsodtGfT3tLCjq5He9gba
      GuO0NMSoi1pELJOIbRKPmFjmcqM3IPBdyoVF3MI8ysthCBdD+OFIrlDIwMUtF/HKWfCz2FaZ
      iO2iggJCuUjlU3YcXM9DKoVUCgV4SmgB3BcshyfLPSjOUmjUXvFW2vLAj1cAtxh659W9JnVt
      oRdPdEG8LUzbAA+ulEJJHyl9lPSQ0kMFPlL5oCRKSd65NMmfv34VAw8TF9vwqY8ZNMYkDVGX
      hFWkuU6yoyNOZ5ONQYBhgGWAaQqEclGBgwzKKL+EUi5ClhH4WKaBZVlYpgkIfAW+Aq+yBQo8
      qfBVQCAlRc8n6/rMOwHzjkfWccn7CkcYOJh4wsBVFhITQxlaAFuCqgzLB86tUUo3FzYsnaXQ
      izu5cJ9futXItBO3Bngi9Ws3K4oyowRIAhkgAxcpPWTgIQOHwC8TBA7Sd8J9gRumBy7SL4f7
      /XJo3CoMC5QMKseUCbxwvwzK4TVXBOCjAg+lfAxDELEtLCuCp2JYho8tfCwjwDQNbMsmYttY
      toVlWpimgWmYmKaJRFDwFQVfUZISRyk8pQgUlANFyVeUpEFRGeQCyaJbxvEVXmDiBxaeMvBk
      KIhACfwAhLIxiEBg4AcmgR9ByCi2jCGCKH4QwfUtpDIRysBAC2D9qDBmRAaV90Fo1NJfZdSV
      mNutGLhb6ff2yygVoBBhFYwMFwc2baQdxzMj+MIgiCSQkQakaRP4Dr5XwHOz+E4ez83iOTl8
      N4fnVl6dPGGD1QQqXYorm4HCQFHRH6AEKGGiDAuEjRQWSgmCimftihvELDAMEEZoFpYhidkG
      sUgU24piWxaWBaYRIAEvMCkHRmiYCnxZ8dBSkPVgyTXIuRZZx2TJtcg4BkuuScEzkMpAqTD8
      UkqglAHKREkTpUyQFkgLJS2QNkpamAIMAYZQt4JMoSrpKiy7UBgm2JYkHvWJR3wSMZ9YNMCO
      SixbYlsSy9rEuUCLyTGSecH+PduZunmT3l39yPISMwsuO/s6KjddBQEoCW4B6Zdxy4tIv3TL
      Q/oO0i8ivRLKLyErI5cqKKP8cuj5pIcK3HDzHaRfIpA+UgWhJ1YSKURoaCJ8NFBQ8bw+Ak8I
      XBSelLiBg+s7BMpACpMAgQSkAImqGK5CCgsp6pAijhQxAqIEKkKAjSRCoEx8ZRAoCJRCIsJr
      YiAxw/eV/b5UBFLhS0EgK8dLgSkE/+nYIs3RAC8w8KVBoASOb1L2TfKuTbYcYakcYcmJkHMi
      FFyLom+SdSxKvolUAhGqDIGBbUgipiRiBkRNSdSQRE2JbUgCU4RDACu/i8AUCksoIpXzlo+N
      mJKoJYlYEssQGEbYwpIIpBKEBqwwBERQRAXEDAMTG4ggsQmUhZIQyLAHKqisTL45ludmGJrI
      0VkXMDXfxPDgOSKtvQSTV7icaVoRwGdFKkm6MI8vvXCJdRWGAYEK8IOKMapw+XVFeKOB8lFK
      omYvEqSvMZufYSY3tdIosqRJS6kBoYzKDyiWXSYgUIiKt6p8VqGHlZhI7FWfl72aAcserXKO
      gFvXlhYeFuMRi0DZoCxQZmVj1fGVdyr08GJVGQQgVh1rARaClW7MNYjKtcK9K7e2ip9/0Ikw
      QKrKFRSV+w49tBChkVExsiiSViVREQ8+YVaCWOWphVAIEb4CSBnWSss1EyuGDC7gAEuYKMzw
      NxSCSt8NgYCg8lqZ97lyneX0W5tPIPxwYYDlY1Xl92STVoVQpSwN3dvZlsgxWnBp7+hkcSGN
      5wg6602UUivPBBBCUCqVVt5blhUa7Kq15ZdriOVz5osp/ssb/xnHK4MQGEJgCANDmJVXY2UF
      6uW/Ai6nQ3i8sJoxWltX0ndnWjk00RP+WEblfMMIV64Wy66q8rfCyufV7zEEwgg/L6dLpSi5
      PkE+TzAzg5ABpgowpEShmIgL3t4ZRwpR6YiRQFAx6goVIy0kLPyVNu3HK+1btqxuvYhP2s9K
      z9KyMS6fIlYr5FZi+LJ8PaXWXEt8Qlk+uYSrjl/OP5TiytHh16gwhFyz/9arrLwPpbP2/Mpx
      QmKisJREiMpxK+8VgW8zmTlMIK3QGW1KCOQu8u7FaXrqA0TrTsoLk3i5WVTjXpxykROPHAy/
      pM8YAkklyZQWUUqy4ilXGfva/7+Kio1WPK9Y8Z1rjhUScPyVa926Hmu7CZffi+V8P56+/KIU
      eFKiXA9VyCPC+efhhkIJQcle7oZc9TOo3zBYAZ5lEBgf9+trTloHa8//tHPUbfL5zeusFdFK
      6uoL/Ob93OG6QqiPpd3K4zPc52+Y+HLbCDZxICw9PcJM3uShvTso5LLIcpFIaxulfIm2lqZK
      uT5HjWDNA4nuBdLUNHpxGE1NowWgqWm0ADQ1jRaApqapeutTKUUV2+GaGqfqAhBCVOWBylLK
      qj2eVa0MRFXn74/VvPdqPRf6077zqgpgeeS3Gvi+j2maVTFCKcNpGtU0hGp970qpquT9ad95
      1WuAalHNh3MvT9OoFtW892qIHj79O6/qQJhGU20ezF4g6eN4d2hXqIBMJrsmKfDKzM3OUXJ9
      ZOCRzeaQd+EelO/g3iZbpRSFbAYnCPNfSM2RKzqrZrco3FKe2dkUbqDw3RK5Qmnd+ecy8yST
      s5RcfyXNdx2CVffgOUVmZ2cplN3VBaOQXSSVXkQqhVsqUCit2n87pMdcMsnsfHju8n04ztrz
      A88hmy+iUJQLWeZSaYJVX66SAenUHEv5EkoGZLPZNfs/DaUClpayKKh8X+VPOVKSSaeYnQu/
      22UeTAE4KUamcrc9ZGF6hNfeOrMmLTlxk/l0kssDo6RmJhkYHMKV689WLo4wmrlNsQoZJofO
      MLoIc+M3GE/OMTAwgOsvTyhTTIzfZGF+msFro0yOTTB07ca68782dIVMZgkvuFXoxckRMqts
      Mbc4z8JCmnPnr6ykBV6Z8fFxpsaGGJ9ZYHRknOGbY+vLtJzk8rUk2Vxh1ZyzgJGRtedPTwwz
      ODSC9MpcvHSZuekxro3NruzPzs8wM5fiypXLpFNJLg0OkC/duXNEBkVOv/Ersq5k+sr7nB4Y
      /+QDvRwXr9wgs7RWWA9uG0AFXHr/TW4ml3ji1EnOXxzAkAGPnXqOZrvMdEbS39uy5pTe/n0Y
      Y8PEmlvp7G2jWPw0b3IbpMOZt95mNi95+sR+Tl8YwzYUzzzzLIn6Fvb3b+MqELEM5ufnKRTK
      FF2PqBUBBP179jM+ep3mli562hOUhwbXnbVTzJF3bNo6G/jnfzlHOdrMo30RBt59i3iilWcf
      P0JTeytXB29Q37N35TzDjrF3316Grw/T0tJMfUcjwzdvrjvfzEKKusYI8ZEM5wdH6N5zGDk/
      yVvJcdr7j3JoVwfbd++n5IyCaREzFKnFJfb07F+5RmNHH9sNwZSVoKWzj11OcX0zSIWgq6uD
      hfQiWUfQ3mgyde08Z8fzfPFYH++dnWD/sUfYUe9SKC6xlG9as3TKA1cDSCkp5/N4gUdRmrTE
      fOYWi+w4cIzHHu4n8AKyqUkmJsa5OjjE5PytmmLq5g1EYw+7e9vuek0HKSXZpQLCK+DbCWKi
      SCZXZu/DJzm8tw/pr63OG7v7ee7Zp9nW3UpspVdEcXP4Bo09e+hpT9z1vbf27uGLXzxFQzlF
      1mqmt7UREanj+JOniIuwGnBcweNfOEVhMblynvIdrg+Ps+vAYZrid99IfejRp3jy2CFmJiZo
      79lGImpR397Hqacep5xNrzlWei6O3cDJRw8xl5xZSc/PTzFbNHnowC7Mu/zyG9vaWBq/gt28
      HQEs5IoYVpyy47HroUfp72pC2Q08++xz9DY4TM3mV841f/jDH/7wru/4PiaXmuCjkQyHD+zE
      WUoh4i10dXeTiIVLb9iROppaO9i3dw9tba10RB2uJkt0ttQzM3adsfFJMiVwFscYHk+yWJJs
      62q9Y76zY0MMZ2wO7+5iKZUk1txJV2cHsXgddbYgFq/Dzc/xwfkbLKRTtDbGOf/Redq27SPu
      zDCejdBabzM2PMjExBQONsnhAabn0nhWPe1NdxaElIpEIoFZ14K3OIVrJuhuS3Dl0hV6dh2g
      pSHO0uw45y4N0bFtN/mZEWR9G7YsMXztKhNTM0TjcQYvnyc1n8Zu7KSp7g4r1ymFMmIk4iZN
      jXVMTc/S2N5D1F1gYCTJwSOHidkmQ+ffZ2I2hWMkaLXKXL2ZYt/+nVy9OkpPdweZ1BSjo2NM
      pbJEgywD18eYW8izbXv3Hby0QokoForenX1YhkW9GZAtCXZt6yQar6cuaqKkz81k77EAAABQ
      SURBVPUr50m7dezuhKGJEl1t9boXqFTMY9l12Hb1KsNCNkessYEt7SBUimw+T2NDw1bmuobA
      LVOWBonY1i4PWSrksWJ12GaVV4XQaKrN/wcqkoMj7sdkXAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Vaccinations among Middle East Countries ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Vaccinations in Jordan' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
